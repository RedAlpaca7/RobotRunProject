
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00001d3a  00001dce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  00800138  00800138  00001e06  2**0
                  ALLOC
  3 .stab         00005af0  00000000  00000000  00001e08  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  000078f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000fdb6  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fdf8  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000060  00000000  00000000  0000fe38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000012ec  00000000  00000000  0000fe98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000814  00000000  00000000  00011184  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000009d2  00000000  00000000  00011998  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000e8  00000000  00000000  0001236c  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000588  00000000  00000000  00012454  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000205  00000000  00000000  000129dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000050  00000000  00000000  00012be1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__dtors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__vector_9>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      68:	3c 03       	fmul	r19, r20
      6a:	4c 03       	fmul	r20, r20
      6c:	07 03       	mulsu	r16, r23
      6e:	1c 03       	fmul	r17, r20
      70:	2c 03       	fmul	r18, r20
      72:	3c 03       	fmul	r19, r20
      74:	1c 03       	fmul	r17, r20
      76:	1c 03       	fmul	r17, r20
      78:	1c 03       	fmul	r17, r20

0000007a <__trampolines_end>:
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	00 1f       	adc	r16, r16
      82:	1f 1f       	adc	r17, r31
      84:	1f 1f       	adc	r17, r31
      86:	1f 1f       	adc	r17, r31

00000088 <__ctors_end>:
      88:	af 07       	cpc	r26, r31

0000008a <__dtors_end>:
      8a:	11 24       	eor	r1, r1
      8c:	1f be       	out	0x3f, r1	; 63
      8e:	cf ef       	ldi	r28, 0xFF	; 255
      90:	d8 e0       	ldi	r29, 0x08	; 8
      92:	de bf       	out	0x3e, r29	; 62
      94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
      96:	11 e0       	ldi	r17, 0x01	; 1
      98:	a0 e0       	ldi	r26, 0x00	; 0
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	ea e3       	ldi	r30, 0x3A	; 58
      9e:	fd e1       	ldi	r31, 0x1D	; 29
      a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
      a2:	05 90       	lpm	r0, Z+
      a4:	0d 92       	st	X+, r0
      a6:	a8 33       	cpi	r26, 0x38	; 56
      a8:	b1 07       	cpc	r27, r17
      aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
      ac:	21 e0       	ldi	r18, 0x01	; 1
      ae:	a8 e3       	ldi	r26, 0x38	; 56
      b0:	b1 e0       	ldi	r27, 0x01	; 1
      b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
      b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
      b6:	a8 3a       	cpi	r26, 0xA8	; 168
      b8:	b2 07       	cpc	r27, r18
      ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
      bc:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <main>
      c0:	0c 94 90 0e 	jmp	0x1d20	; 0x1d20 <__do_global_dtors>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <load_custom_characters>:
	0b11111
};

void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
      c8:	60 e0       	ldi	r22, 0x00	; 0
      ca:	8a e7       	ldi	r24, 0x7A	; 122
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
      d2:	61 e0       	ldi	r22, 0x01	; 1
      d4:	8b e7       	ldi	r24, 0x7B	; 123
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
      dc:	62 e0       	ldi	r22, 0x02	; 2
      de:	8c e7       	ldi	r24, 0x7C	; 124
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
      e6:	63 e0       	ldi	r22, 0x03	; 3
      e8:	8d e7       	ldi	r24, 0x7D	; 125
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
      f0:	64 e0       	ldi	r22, 0x04	; 4
      f2:	8e e7       	ldi	r24, 0x7E	; 126
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
      fa:	65 e0       	ldi	r22, 0x05	; 5
      fc:	8f e7       	ldi	r24, 0x7F	; 127
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     104:	66 e0       	ldi	r22, 0x06	; 6
     106:	80 e8       	ldi	r24, 0x80	; 128
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     10e:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
     112:	08 95       	ret

00000114 <display_readings>:
}

void display_readings(const unsigned int *calibrated_values)
{
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	1f 93       	push	r17
     11a:	cf 93       	push	r28
     11c:	df 93       	push	r29
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
     122:	2a 97       	sbiw	r28, 0x0a	; 10
     124:	0f b6       	in	r0, 0x3f	; 63
     126:	f8 94       	cli
     128:	de bf       	out	0x3e, r29	; 62
     12a:	0f be       	out	0x3f, r0	; 63
     12c:	cd bf       	out	0x3d, r28	; 61
     12e:	7c 01       	movw	r14, r24
	unsigned char i;
	
	for(i=0;i<5;i++) {
     130:	10 e0       	ldi	r17, 0x00	; 0
     132:	25 c0       	rjmp	.+74     	; 0x17e <display_readings+0x6a>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
     134:	8a e0       	ldi	r24, 0x0A	; 10
     136:	ea e0       	ldi	r30, 0x0A	; 10
     138:	f1 e0       	ldi	r31, 0x01	; 1
     13a:	de 01       	movw	r26, r28
     13c:	11 96       	adiw	r26, 0x01	; 1
     13e:	01 90       	ld	r0, Z+
     140:	0d 92       	st	X+, r0
     142:	8a 95       	dec	r24
     144:	e1 f7       	brne	.-8      	; 0x13e <display_readings+0x2a>
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
     146:	e1 2f       	mov	r30, r17
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	ee 0f       	add	r30, r30
     14c:	ff 1f       	adc	r31, r31
     14e:	ee 0d       	add	r30, r14
     150:	ff 1d       	adc	r31, r15
     152:	20 81       	ld	r18, Z
     154:	31 81       	ldd	r19, Z+1	; 0x01
     156:	a7 e4       	ldi	r26, 0x47	; 71
     158:	b4 e1       	ldi	r27, 0x14	; 20
     15a:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__umulhisi3>
     15e:	96 95       	lsr	r25
     160:	87 95       	ror	r24
     162:	96 95       	lsr	r25
     164:	87 95       	ror	r24
     166:	96 95       	lsr	r25
     168:	87 95       	ror	r24
     16a:	e1 e0       	ldi	r30, 0x01	; 1
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e8 0f       	add	r30, r24
     174:	f9 1f       	adc	r31, r25
		print_character(c);
     176:	80 81       	ld	r24, Z
     178:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <print_character>

void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;
	
	for(i=0;i<5;i++) {
     17c:	1f 5f       	subi	r17, 0xFF	; 255
     17e:	15 30       	cpi	r17, 0x05	; 5
     180:	c8 f2       	brcs	.-78     	; 0x134 <display_readings+0x20>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
		print_character(c);
	}
}
     182:	2a 96       	adiw	r28, 0x0a	; 10
     184:	0f b6       	in	r0, 0x3f	; 63
     186:	f8 94       	cli
     188:	de bf       	out	0x3e, r29	; 62
     18a:	0f be       	out	0x3f, r0	; 63
     18c:	cd bf       	out	0x3d, r28	; 61
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	1f 91       	pop	r17
     194:	ff 90       	pop	r15
     196:	ef 90       	pop	r14
     198:	08 95       	ret

0000019a <initialize>:

void initialize()
{
     19a:	0f 93       	push	r16
     19c:	1f 93       	push	r17
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	cd b7       	in	r28, 0x3d	; 61
     1a4:	de b7       	in	r29, 0x3e	; 62
     1a6:	2a 97       	sbiw	r28, 0x0a	; 10
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	f8 94       	cli
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	0f be       	out	0x3f, r0	; 63
     1b0:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; // used as a simple timer
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
     1b2:	80 ed       	ldi	r24, 0xD0	; 208
     1b4:	97 e0       	ldi	r25, 0x07	; 7
     1b6:	0e 94 ab 07 	call	0xf56	; 0xf56 <pololu_3pi_init>
	load_custom_characters(); // load the custom characters
     1ba:	0e 94 64 00 	call	0xc8	; 0xc8 <load_custom_characters>
	
	while(!button_is_pressed(BUTTON_B))
     1be:	1b c0       	rjmp	.+54     	; 0x1f6 <initialize+0x5c>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     1c0:	0e 94 35 04 	call	0x86a	; 0x86a <read_battery_millivolts_3pi>
     1c4:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();
		
		clear();
     1c6:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
		print_long(bat);
     1ca:	b8 01       	movw	r22, r16
     1cc:	11 0f       	add	r17, r17
     1ce:	88 0b       	sbc	r24, r24
     1d0:	99 0b       	sbc	r25, r25
     1d2:	0e 94 cc 05 	call	0xb98	; 0xb98 <print_long>
		print("mV");
     1d6:	89 e1       	ldi	r24, 0x19	; 25
     1d8:	91 e0       	ldi	r25, 0x01	; 1
     1da:	0e 94 77 05 	call	0xaee	; 0xaee <print>
		lcd_goto_xy(0,1);
     1de:	61 e0       	ldi	r22, 0x01	; 1
     1e0:	80 e0       	ldi	r24, 0x00	; 0
     1e2:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
		print("Press B");
     1e6:	8c e1       	ldi	r24, 0x1C	; 28
     1e8:	91 e0       	ldi	r25, 0x01	; 1
     1ea:	0e 94 77 05 	call	0xaee	; 0xaee <print>
		
		delay_ms(100);
     1ee:	84 e6       	ldi	r24, 0x64	; 100
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
	load_custom_characters(); // load the custom characters
	
	while(!button_is_pressed(BUTTON_B))
     1f6:	80 e1       	ldi	r24, 0x10	; 16
     1f8:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <button_is_pressed>
     1fc:	88 23       	and	r24, r24
     1fe:	01 f3       	breq	.-64     	; 0x1c0 <initialize+0x26>
		print("Press B");
		
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);
     200:	80 e1       	ldi	r24, 0x10	; 16
     202:	0e 94 d4 06 	call	0xda8	; 0xda8 <wait_for_button_release>
	delay_ms(1000);
     206:	88 ee       	ldi	r24, 0xE8	; 232
     208:	93 e0       	ldi	r25, 0x03	; 3
     20a:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>

	for(counter=0;counter<80;counter++)
     20e:	00 e0       	ldi	r16, 0x00	; 0
     210:	10 e0       	ldi	r17, 0x00	; 0
     212:	1a c0       	rjmp	.+52     	; 0x248 <initialize+0xae>
	{
		if(counter < 20 || counter >= 60)
     214:	c8 01       	movw	r24, r16
     216:	44 97       	sbiw	r24, 0x14	; 20
     218:	88 97       	sbiw	r24, 0x28	; 40
     21a:	38 f0       	brcs	.+14     	; 0x22a <initialize+0x90>
		set_motors(40,-40);
     21c:	68 ed       	ldi	r22, 0xD8	; 216
     21e:	7f ef       	ldi	r23, 0xFF	; 255
     220:	88 e2       	ldi	r24, 0x28	; 40
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     228:	06 c0       	rjmp	.+12     	; 0x236 <initialize+0x9c>
		else
		set_motors(-40,40);
     22a:	68 e2       	ldi	r22, 0x28	; 40
     22c:	70 e0       	ldi	r23, 0x00	; 0
     22e:	88 ed       	ldi	r24, 0xD8	; 216
     230:	9f ef       	ldi	r25, 0xFF	; 255
     232:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	0e 94 6f 07 	call	0xede	; 0xede <calibrate_line_sensors>

		delay_ms(20);
     23c:	84 e1       	ldi	r24, 0x14	; 20
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
	}
	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     244:	0f 5f       	subi	r16, 0xFF	; 255
     246:	1f 4f       	sbci	r17, 0xFF	; 255
     248:	00 35       	cpi	r16, 0x50	; 80
     24a:	11 05       	cpc	r17, r1
     24c:	18 f3       	brcs	.-58     	; 0x214 <initialize+0x7a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);

		delay_ms(20);
	}
	set_motors(0,0);
     24e:	60 e0       	ldi	r22, 0x00	; 0
     250:	70 e0       	ldi	r23, 0x00	; 0
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     25a:	19 c0       	rjmp	.+50     	; 0x28e <initialize+0xf4>
	{
		// Read the sensor values and get the position measurement.
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	ce 01       	movw	r24, r28
     260:	01 96       	adiw	r24, 0x01	; 1
     262:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
     266:	8c 01       	movw	r16, r24
		// Display the position measurement, which will go from 0
		// (when the leftmost sensor is over the line) to 4000 (when
		// the rightmost sensor is over the line) on the 3pi, along
		// with a bar graph of the sensor readings.  This allows you
		// to make sure the robot is ready to go.
		clear();
     268:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
		print_long(position);
     26c:	b8 01       	movw	r22, r16
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	0e 94 cc 05 	call	0xb98	; 0xb98 <print_long>
		lcd_goto_xy(0,1);
     276:	61 e0       	ldi	r22, 0x01	; 1
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
		display_readings(sensors);
     27e:	ce 01       	movw	r24, r28
     280:	01 96       	adiw	r24, 0x01	; 1
     282:	0e 94 8a 00 	call	0x114	; 0x114 <display_readings>
		
		delay_ms(100);
     286:	84 e6       	ldi	r24, 0x64	; 100
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
		delay_ms(20);
	}
	set_motors(0,0);
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     28e:	80 e1       	ldi	r24, 0x10	; 16
     290:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <button_is_pressed>
     294:	88 23       	and	r24, r24
     296:	11 f3       	breq	.-60     	; 0x25c <initialize+0xc2>
		lcd_goto_xy(0,1);
		display_readings(sensors);
		
		delay_ms(100);
	}
	wait_for_button_release(BUTTON_B);
     298:	80 e1       	ldi	r24, 0x10	; 16
     29a:	0e 94 d4 06 	call	0xda8	; 0xda8 <wait_for_button_release>
	
	clear();
     29e:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
	
	
}
     2a2:	2a 96       	adiw	r28, 0x0a	; 10
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	f8 94       	cli
     2a8:	de bf       	out	0x3e, r29	; 62
     2aa:	0f be       	out	0x3f, r0	; 63
     2ac:	cd bf       	out	0x3d, r28	; 61
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	1f 91       	pop	r17
     2b4:	0f 91       	pop	r16
     2b6:	08 95       	ret

000002b8 <inch>:

void inch(){
	set_motors(50,50);
     2b8:	62 e3       	ldi	r22, 0x32	; 50
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	82 e3       	ldi	r24, 0x32	; 50
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     2c4:	86 e9       	ldi	r24, 0x96	; 150
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
	delay(150);
	set_motors(0,0);
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     2d8:	08 95       	ret

000002da <motorcontrol>:
		
	}
}


void motorcontrol(char x){
     2da:	cf 93       	push	r28
     2dc:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     2de:	61 e0       	ldi	r22, 0x01	; 1
     2e0:	8a e9       	ldi	r24, 0x9A	; 154
     2e2:	91 e0       	ldi	r25, 0x01	; 1
     2e4:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
	
	if(x == 'N')
     2e8:	ce 34       	cpi	r28, 0x4E	; 78
     2ea:	39 f4       	brne	.+14     	; 0x2fa <motorcontrol+0x20>
		set_motors(0,0);
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     2f8:	b1 c0       	rjmp	.+354    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
	
	
	else if(x == 'L'){										//turn left
     2fa:	cc 34       	cpi	r28, 0x4C	; 76
     2fc:	09 f5       	brne	.+66     	; 0x340 <motorcontrol+0x66>
		set_motors(-50,50);
     2fe:	62 e3       	ldi	r22, 0x32	; 50
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	8e ec       	ldi	r24, 0xCE	; 206
     304:	9f ef       	ldi	r25, 0xFF	; 255
     306:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		while (sensors[2] >=500){
     30a:	05 c0       	rjmp	.+10     	; 0x316 <motorcontrol+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     30c:	61 e0       	ldi	r22, 0x01	; 1
     30e:	8a e9       	ldi	r24, 0x9A	; 154
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
		set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     316:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     31a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     31e:	84 3f       	cpi	r24, 0xF4	; 244
     320:	91 40       	sbci	r25, 0x01	; 1
     322:	a0 f7       	brcc	.-24     	; 0x30c <motorcontrol+0x32>
     324:	05 c0       	rjmp	.+10     	; 0x330 <motorcontrol+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     326:	61 e0       	ldi	r22, 0x01	; 1
     328:	8a e9       	ldi	r24, 0x9A	; 154
     32a:	91 e0       	ldi	r25, 0x01	; 1
     32c:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     330:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     334:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     338:	85 3f       	cpi	r24, 0xF5	; 245
     33a:	91 40       	sbci	r25, 0x01	; 1
     33c:	a0 f3       	brcs	.-24     	; 0x326 <motorcontrol+0x4c>
     33e:	8e c0       	rjmp	.+284    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     340:	c2 35       	cpi	r28, 0x52	; 82
     342:	09 f5       	brne	.+66     	; 0x386 <motorcontrol+0xac>
		set_motors(50,-50);
     344:	6e ec       	ldi	r22, 0xCE	; 206
     346:	7f ef       	ldi	r23, 0xFF	; 255
     348:	82 e3       	ldi	r24, 0x32	; 50
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		while (sensors[2] >=500){
     350:	05 c0       	rjmp	.+10     	; 0x35c <motorcontrol+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	8a e9       	ldi	r24, 0x9A	; 154
     356:	91 e0       	ldi	r25, 0x01	; 1
     358:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     35c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     360:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     364:	84 3f       	cpi	r24, 0xF4	; 244
     366:	91 40       	sbci	r25, 0x01	; 1
     368:	a0 f7       	brcc	.-24     	; 0x352 <motorcontrol+0x78>
     36a:	05 c0       	rjmp	.+10     	; 0x376 <motorcontrol+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	8a e9       	ldi	r24, 0x9A	; 154
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     376:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     37a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     37e:	85 3f       	cpi	r24, 0xF5	; 245
     380:	91 40       	sbci	r25, 0x01	; 1
     382:	a0 f3       	brcs	.-24     	; 0x36c <motorcontrol+0x92>
     384:	6b c0       	rjmp	.+214    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     386:	c3 35       	cpi	r28, 0x53	; 83
     388:	89 f5       	brne	.+98     	; 0x3ec <motorcontrol+0x112>
		set_motors(50,50);
     38a:	62 e3       	ldi	r22, 0x32	; 50
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	82 e3       	ldi	r24, 0x32	; 50
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		
		if (sensors[3] >=400  && sensors[4] <=400 )
     396:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     39a:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     39e:	80 39       	cpi	r24, 0x90	; 144
     3a0:	91 40       	sbci	r25, 0x01	; 1
     3a2:	68 f0       	brcs	.+26     	; 0x3be <motorcontrol+0xe4>
     3a4:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     3a8:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     3ac:	81 39       	cpi	r24, 0x91	; 145
     3ae:	91 40       	sbci	r25, 0x01	; 1
     3b0:	30 f4       	brcc	.+12     	; 0x3be <motorcontrol+0xe4>
			set_motors(100,40);
     3b2:	68 e2       	ldi	r22, 0x28	; 40
     3b4:	70 e0       	ldi	r23, 0x00	; 0
     3b6:	84 e6       	ldi	r24, 0x64	; 100
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     3be:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     3c2:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     3c6:	80 39       	cpi	r24, 0x90	; 144
     3c8:	91 40       	sbci	r25, 0x01	; 1
     3ca:	08 f4       	brcc	.+2      	; 0x3ce <motorcontrol+0xf4>
     3cc:	47 c0       	rjmp	.+142    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
     3ce:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     3d2:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     3d6:	81 39       	cpi	r24, 0x91	; 145
     3d8:	91 40       	sbci	r25, 0x01	; 1
     3da:	08 f0       	brcs	.+2      	; 0x3de <motorcontrol+0x104>
     3dc:	3f c0       	rjmp	.+126    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			set_motors(40,100);
     3de:	64 e6       	ldi	r22, 0x64	; 100
     3e0:	70 e0       	ldi	r23, 0x00	; 0
     3e2:	88 e2       	ldi	r24, 0x28	; 40
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     3ea:	38 c0       	rjmp	.+112    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
	}
	
	else if(x == 'B'){									// reverse
     3ec:	c2 34       	cpi	r28, 0x42	; 66
     3ee:	09 f5       	brne	.+66     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
		set_motors(-50,-50);
     3f0:	6e ec       	ldi	r22, 0xCE	; 206
     3f2:	7f ef       	ldi	r23, 0xFF	; 255
     3f4:	8e ec       	ldi	r24, 0xCE	; 206
     3f6:	9f ef       	ldi	r25, 0xFF	; 255
     3f8:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		if (sensors[3] >=400)
     3fc:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     400:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     404:	80 39       	cpi	r24, 0x90	; 144
     406:	91 40       	sbci	r25, 0x01	; 1
     408:	30 f0       	brcs	.+12     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
			set_motors(-50,-55);
     40a:	69 ec       	ldi	r22, 0xC9	; 201
     40c:	7f ef       	ldi	r23, 0xFF	; 255
     40e:	8e ec       	ldi	r24, 0xCE	; 206
     410:	9f ef       	ldi	r25, 0xFF	; 255
     412:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		if (sensors[1] >=400)
     416:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     41a:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     41e:	80 39       	cpi	r24, 0x90	; 144
     420:	91 40       	sbci	r25, 0x01	; 1
     422:	e0 f0       	brcs	.+56     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			set_motors(-55,-50);
     424:	6e ec       	ldi	r22, 0xCE	; 206
     426:	7f ef       	ldi	r23, 0xFF	; 255
     428:	89 ec       	ldi	r24, 0xC9	; 201
     42a:	9f ef       	ldi	r25, 0xFF	; 255
     42c:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     430:	15 c0       	rjmp	.+42     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
	}
	else if(x == 'T'){
     432:	c4 35       	cpi	r28, 0x54	; 84
     434:	99 f4       	brne	.+38     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
		set_motors(-75,75);
     436:	6b e4       	ldi	r22, 0x4B	; 75
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	85 eb       	ldi	r24, 0xB5	; 181
     43c:	9f ef       	ldi	r25, 0xFF	; 255
     43e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
		while (sensors[2] >=500){
     442:	05 c0       	rjmp	.+10     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
			read_line(sensors,IR_EMITTERS_ON);
     444:	61 e0       	ldi	r22, 0x01	; 1
     446:	8a e9       	ldi	r24, 0x9A	; 154
     448:	91 e0       	ldi	r25, 0x01	; 1
     44a:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
		if (sensors[1] >=400)
			set_motors(-55,-50);
	}
	else if(x == 'T'){
		set_motors(-75,75);
		while (sensors[2] >=500){
     44e:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     452:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     456:	84 3f       	cpi	r24, 0xF4	; 244
     458:	91 40       	sbci	r25, 0x01	; 1
     45a:	a0 f7       	brcc	.-24     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
}
     45c:	cf 91       	pop	r28
     45e:	08 95       	ret

00000460 <direction>:
	set_motors(0,0);
}

char direction(){																												// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     460:	61 e0       	ldi	r22, 0x01	; 1
     462:	8a e9       	ldi	r24, 0x9A	; 154
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     46a:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     46e:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     472:	84 3f       	cpi	r24, 0xF4	; 244
     474:	21 e0       	ldi	r18, 0x01	; 1
     476:	92 07       	cpc	r25, r18
     478:	c0 f0       	brcs	.+48     	; 0x4aa <direction+0x4a>
     47a:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <sensors+0x6>
     47e:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <sensors+0x7>
     482:	24 3f       	cpi	r18, 0xF4	; 244
     484:	31 40       	sbci	r19, 0x01	; 1
     486:	88 f0       	brcs	.+34     	; 0x4aa <direction+0x4a>
			inch();
     488:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     48c:	61 e0       	ldi	r22, 0x01	; 1
     48e:	8a e9       	ldi	r24, 0x9A	; 154
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
			
			if (sensors[2] >=500)
     496:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     49a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     49e:	84 3f       	cpi	r24, 0xF4	; 244
     4a0:	91 40       	sbci	r25, 0x01	; 1
     4a2:	08 f4       	brcc	.+2      	; 0x4a6 <direction+0x46>
     4a4:	91 c0       	rjmp	.+290    	; 0x5c8 <direction+0x168>
				return X_junction;
     4a6:	88 e0       	ldi	r24, 0x08	; 8
     4a8:	08 95       	ret
			else
				return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     4aa:	84 3f       	cpi	r24, 0xF4	; 244
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	92 07       	cpc	r25, r18
     4b0:	00 f1       	brcs	.+64     	; 0x4f2 <direction+0x92>
     4b2:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <sensors>
     4b6:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <sensors+0x1>
     4ba:	24 3f       	cpi	r18, 0xF4	; 244
     4bc:	31 40       	sbci	r19, 0x01	; 1
     4be:	c8 f0       	brcs	.+50     	; 0x4f2 <direction+0x92>
			inch();
     4c0:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     4c4:	61 e0       	ldi	r22, 0x01	; 1
     4c6:	8a e9       	ldi	r24, 0x9A	; 154
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     4ce:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     4d2:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     4d6:	84 3f       	cpi	r24, 0xF4	; 244
     4d8:	91 40       	sbci	r25, 0x01	; 1
     4da:	08 f0       	brcs	.+2      	; 0x4de <direction+0x7e>
     4dc:	77 c0       	rjmp	.+238    	; 0x5cc <direction+0x16c>
     4de:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     4e2:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     4e6:	84 3f       	cpi	r24, 0xF4	; 244
     4e8:	91 40       	sbci	r25, 0x01	; 1
     4ea:	08 f4       	brcc	.+2      	; 0x4ee <direction+0x8e>
     4ec:	71 c0       	rjmp	.+226    	; 0x5d0 <direction+0x170>
				return Straight_left_junction;
     4ee:	86 e0       	ldi	r24, 0x06	; 6
     4f0:	08 95       	ret
			else
				return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     4f2:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <sensors+0x6>
     4f6:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <sensors+0x7>
     4fa:	44 3f       	cpi	r20, 0xF4	; 244
     4fc:	61 e0       	ldi	r22, 0x01	; 1
     4fe:	56 07       	cpc	r21, r22
     500:	00 f1       	brcs	.+64     	; 0x542 <direction+0xe2>
     502:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <sensors+0x8>
     506:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <sensors+0x9>
     50a:	24 3f       	cpi	r18, 0xF4	; 244
     50c:	31 40       	sbci	r19, 0x01	; 1
     50e:	c8 f0       	brcs	.+50     	; 0x542 <direction+0xe2>
			inch();
     510:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	8a e9       	ldi	r24, 0x9A	; 154
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     51e:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     522:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     526:	84 3f       	cpi	r24, 0xF4	; 244
     528:	91 40       	sbci	r25, 0x01	; 1
     52a:	08 f0       	brcs	.+2      	; 0x52e <direction+0xce>
     52c:	53 c0       	rjmp	.+166    	; 0x5d4 <direction+0x174>
     52e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     532:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     536:	84 3f       	cpi	r24, 0xF4	; 244
     538:	91 40       	sbci	r25, 0x01	; 1
     53a:	08 f4       	brcc	.+2      	; 0x53e <direction+0xde>
     53c:	4d c0       	rjmp	.+154    	; 0x5d8 <direction+0x178>
				return Straight_right_junction;
     53e:	85 e0       	ldi	r24, 0x05	; 5
     540:	08 95       	ret
			else
				return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     542:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <sensors+0x4>
     546:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <sensors+0x5>
     54a:	29 3c       	cpi	r18, 0xC9	; 201
     54c:	31 05       	cpc	r19, r1
     54e:	08 f4       	brcc	.+2      	; 0x552 <direction+0xf2>
     550:	45 c0       	rjmp	.+138    	; 0x5dc <direction+0x17c>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     552:	24 3f       	cpi	r18, 0xF4	; 244
     554:	61 e0       	ldi	r22, 0x01	; 1
     556:	36 07       	cpc	r19, r22
     558:	08 f4       	brcc	.+2      	; 0x55c <direction+0xfc>
     55a:	82 cf       	rjmp	.-252    	; 0x460 <direction>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     55c:	24 3f       	cpi	r18, 0xF4	; 244
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	36 07       	cpc	r19, r22
     562:	f0 f1       	brcs	.+124    	; 0x5e0 <direction+0x180>
     564:	45 3f       	cpi	r20, 0xF5	; 245
     566:	51 40       	sbci	r21, 0x01	; 1
     568:	e8 f5       	brcc	.+122    	; 0x5e4 <direction+0x184>
     56a:	40 91 a2 01 	lds	r20, 0x01A2	; 0x8001a2 <sensors+0x8>
     56e:	50 91 a3 01 	lds	r21, 0x01A3	; 0x8001a3 <sensors+0x9>
     572:	44 3f       	cpi	r20, 0xF4	; 244
     574:	51 40       	sbci	r21, 0x01	; 1
     576:	c0 f1       	brcs	.+112    	; 0x5e8 <direction+0x188>
     578:	40 91 9a 01 	lds	r20, 0x019A	; 0x80019a <sensors>
     57c:	50 91 9b 01 	lds	r21, 0x019B	; 0x80019b <sensors+0x1>
     580:	44 3f       	cpi	r20, 0xF4	; 244
     582:	51 40       	sbci	r21, 0x01	; 1
     584:	98 f1       	brcs	.+102    	; 0x5ec <direction+0x18c>
     586:	85 3f       	cpi	r24, 0xF5	; 245
     588:	91 40       	sbci	r25, 0x01	; 1
     58a:	90 f5       	brcc	.+100    	; 0x5f0 <direction+0x190>
     58c:	24 3f       	cpi	r18, 0xF4	; 244
     58e:	31 40       	sbci	r19, 0x01	; 1
     590:	58 f4       	brcc	.+22     	; 0x5a8 <direction+0x148>
					motorcontrol('S');
					}		// checks if it detects the "barcode"
				return Barcode;
			}
			else 
				return Straight;																						// check if its straight without any corners
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     596:	61 e0       	ldi	r22, 0x01	; 1
     598:	8a e9       	ldi	r24, 0x9A	; 154
     59a:	91 e0       	ldi	r25, 0x01	; 1
     59c:	0e 94 75 07 	call	0xeea	; 0xeea <read_line>
					motorcontrol('S');
     5a0:	83 e5       	ldi	r24, 0x53	; 83
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	0e 94 6d 01 	call	0x2da	; 0x2da <motorcontrol>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     5a8:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     5ac:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     5b0:	80 39       	cpi	r24, 0x90	; 144
     5b2:	91 40       	sbci	r25, 0x01	; 1
     5b4:	80 f7       	brcc	.-32     	; 0x596 <direction+0x136>
     5b6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     5ba:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     5be:	80 39       	cpi	r24, 0x90	; 144
     5c0:	91 40       	sbci	r25, 0x01	; 1
     5c2:	48 f7       	brcc	.-46     	; 0x596 <direction+0x136>
					read_line(sensors,IR_EMITTERS_ON);
					motorcontrol('S');
					}		// checks if it detects the "barcode"
				return Barcode;
     5c4:	82 e0       	ldi	r24, 0x02	; 2
     5c6:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
				return X_junction;
			else
				return T_junction;
     5c8:	87 e0       	ldi	r24, 0x07	; 7
     5ca:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
				return Straight_left_junction;
     5cc:	86 e0       	ldi	r24, 0x06	; 6
     5ce:	08 95       	ret
			else
				return Left_corner;
     5d0:	83 e0       	ldi	r24, 0x03	; 3
     5d2:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
				return Straight_right_junction;
     5d4:	85 e0       	ldi	r24, 0x05	; 5
     5d6:	08 95       	ret
			else
				return Right_corner;
     5d8:	84 e0       	ldi	r24, 0x04	; 4
     5da:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	08 95       	ret
					motorcontrol('S');
					}		// checks if it detects the "barcode"
				return Barcode;
			}
			else 
				return Straight;																						// check if its straight without any corners
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	08 95       	ret
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	08 95       	ret
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	08 95       	ret
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	08 95       	ret
     5f0:	80 e0       	ldi	r24, 0x00	; 0
						
		}
		
	}
}
     5f2:	08 95       	ret

000005f4 <parcour>:

Junctions situatie = Straight;

void parcour() {
	while(1) {
		situatie = direction();
     5f4:	0e 94 30 02 	call	0x460	; 0x460 <direction>
     5f8:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <situatie>
	
 		switch (situatie) {
     5fc:	e8 2f       	mov	r30, r24
     5fe:	f0 e0       	ldi	r31, 0x00	; 0
     600:	e9 30       	cpi	r30, 0x09	; 9
     602:	f1 05       	cpc	r31, r1
     604:	b8 f7       	brcc	.-18     	; 0x5f4 <parcour>
     606:	ec 5c       	subi	r30, 0xCC	; 204
     608:	ff 4f       	sbci	r31, 0xFF	; 255
     60a:	0c 94 10 0d 	jmp	0x1a20	; 0x1a20 <__tablejump2__>
			case Barcode: // end of parcour
				clear();
     60e:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				lcd_goto_xy(0, 0);
     612:	60 e0       	ldi	r22, 0x00	; 0
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
				print("bar code");
     61a:	84 e2       	ldi	r24, 0x24	; 36
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	0e 94 77 05 	call	0xaee	; 0xaee <print>
				set_motors(0,0);
     622:	60 e0       	ldi	r22, 0x00	; 0
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	0e 94 a5 06 	call	0xd4a	; 0xd4a <set_motors>
     62e:	88 ee       	ldi	r24, 0xE8	; 232
     630:	93 e0       	ldi	r25, 0x03	; 3
     632:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     636:	de cf       	rjmp	.-68     	; 0x5f4 <parcour>
				
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				clear();
     638:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				lcd_goto_xy(0, 0);
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
				print("L");
     644:	8d e2       	ldi	r24, 0x2D	; 45
     646:	91 e0       	ldi	r25, 0x01	; 1
     648:	0e 94 77 05 	call	0xaee	; 0xaee <print>
		 		motorcontrol('L');
     64c:	8c e4       	ldi	r24, 0x4C	; 76
     64e:	0e 94 6d 01 	call	0x2da	; 0x2da <motorcontrol>
				clear();
     652:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
		 		break;
     656:	ce cf       	rjmp	.-100    	; 0x5f4 <parcour>
					 
 			case Right_corner:
				clear();
     658:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				lcd_goto_xy(0, 0);
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
				print("R");
     664:	8f e2       	ldi	r24, 0x2F	; 47
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e 94 77 05 	call	0xaee	; 0xaee <print>
 				motorcontrol('R');
     66c:	82 e5       	ldi	r24, 0x52	; 82
     66e:	0e 94 6d 01 	call	0x2da	; 0x2da <motorcontrol>
				clear();
     672:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				break;
     676:	be cf       	rjmp	.-132    	; 0x5f4 <parcour>
				
			case Straight_right_junction:
			case Straight:
				clear();
     678:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				lcd_goto_xy(0, 0);
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
				print("S");
     684:	81 e3       	ldi	r24, 0x31	; 49
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	0e 94 77 05 	call	0xaee	; 0xaee <print>
				motorcontrol('S');
     68c:	83 e5       	ldi	r24, 0x53	; 83
     68e:	0e 94 6d 01 	call	0x2da	; 0x2da <motorcontrol>
				clear();
     692:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				break;
     696:	ae cf       	rjmp	.-164    	; 0x5f4 <parcour>
				
			case Line_end:
				clear();
     698:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				lcd_goto_xy(0, 0);
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	0e 94 ef 05 	call	0xbde	; 0xbde <lcd_goto_xy>
				print("End");
     6a4:	83 e3       	ldi	r24, 0x33	; 51
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 77 05 	call	0xaee	; 0xaee <print>
				motorcontrol('T');
     6ac:	84 e5       	ldi	r24, 0x54	; 84
     6ae:	0e 94 6d 01 	call	0x2da	; 0x2da <motorcontrol>
				clear();
     6b2:	0e 94 68 05 	call	0xad0	; 0xad0 <clear>
				break;
     6b6:	9e cf       	rjmp	.-196    	; 0x5f4 <parcour>

000006b8 <main>:
}


int main()
{
	pololu_3pi_init(2000);
     6b8:	80 ed       	ldi	r24, 0xD0	; 208
     6ba:	97 e0       	ldi	r25, 0x07	; 7
     6bc:	0e 94 ab 07 	call	0xf56	; 0xf56 <pololu_3pi_init>
	initialize();
     6c0:	0e 94 cd 00 	call	0x19a	; 0x19a <initialize>
	parcour();
     6c4:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <parcour>

000006c8 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     6c8:	ec e7       	ldi	r30, 0x7C	; 124
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	80 81       	ld	r24, Z
     6ce:	8f 7d       	andi	r24, 0xDF	; 223
     6d0:	80 83       	st	Z, r24
     6d2:	08 95       	ret

000006d4 <_ZN15OrangutanAnalog7setModeEh>:
     6d4:	81 11       	cpse	r24, r1
     6d6:	03 c0       	rjmp	.+6      	; 0x6de <_ZN15OrangutanAnalog7setModeEh+0xa>
     6d8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <_ZN15OrangutanAnalog7setModeEh.part.0>
     6dc:	08 95       	ret
     6de:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e2:	80 62       	ori	r24, 0x20	; 32
     6e4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e8:	08 95       	ret

000006ea <_ZN15OrangutanAnalog7getModeEv>:
     6ea:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6ee:	85 fb       	bst	r24, 5
     6f0:	88 27       	eor	r24, r24
     6f2:	80 f9       	bld	r24, 0
     6f4:	08 95       	ret

000006f6 <_ZN15OrangutanAnalog16conversionResultEv>:
     6f6:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN15OrangutanAnalog7getModeEv>
     6fa:	88 23       	and	r24, r24
     6fc:	21 f0       	breq	.+8      	; 0x706 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     6fe:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	08 95       	ret
     706:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     70a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     70e:	08 95       	ret

00000710 <_ZN15OrangutanAnalog15startConversionEhh>:
     710:	80 32       	cpi	r24, 0x20	; 32
     712:	a0 f4       	brcc	.+40     	; 0x73c <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     714:	97 e8       	ldi	r25, 0x87	; 135
     716:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     71a:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     71e:	66 23       	and	r22, r22
     720:	11 f0       	breq	.+4      	; 0x726 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     722:	90 6c       	ori	r25, 0xC0	; 192
     724:	02 c0       	rjmp	.+4      	; 0x72a <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     726:	9f 77       	andi	r25, 0x7F	; 127
     728:	90 64       	ori	r25, 0x40	; 64
     72a:	90 7e       	andi	r25, 0xE0	; 224
     72c:	98 2b       	or	r25, r24
     72e:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     732:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     736:	80 64       	ori	r24, 0x40	; 64
     738:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     73c:	08 95       	ret

0000073e <_ZN15OrangutanAnalog11readAverageEhj>:
     73e:	a0 e0       	ldi	r26, 0x00	; 0
     740:	b0 e0       	ldi	r27, 0x00	; 0
     742:	e5 ea       	ldi	r30, 0xA5	; 165
     744:	f3 e0       	ldi	r31, 0x03	; 3
     746:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__prologue_saves__+0x14>
     74a:	eb 01       	movw	r28, r22
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	0e 94 88 03 	call	0x710	; 0x710 <_ZN15OrangutanAnalog15startConversionEhh>
     752:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     756:	86 fd       	sbrc	r24, 6
     758:	fc cf       	rjmp	.-8      	; 0x752 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     75a:	8e 01       	movw	r16, r28
     75c:	c1 2c       	mov	r12, r1
     75e:	d1 2c       	mov	r13, r1
     760:	76 01       	movw	r14, r12
     762:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     766:	80 64       	ori	r24, 0x40	; 64
     768:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     770:	86 fd       	sbrc	r24, 6
     772:	fc cf       	rjmp	.-8      	; 0x76c <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     774:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_ZN15OrangutanAnalog16conversionResultEv>
     778:	c8 0e       	add	r12, r24
     77a:	d9 1e       	adc	r13, r25
     77c:	e1 1c       	adc	r14, r1
     77e:	f1 1c       	adc	r15, r1
     780:	01 50       	subi	r16, 0x01	; 1
     782:	11 09       	sbc	r17, r1
     784:	01 15       	cp	r16, r1
     786:	11 05       	cpc	r17, r1
     788:	61 f7       	brne	.-40     	; 0x762 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     78a:	ce 01       	movw	r24, r28
     78c:	96 95       	lsr	r25
     78e:	87 95       	ror	r24
     790:	c0 34       	cpi	r28, 0x40	; 64
     792:	d1 05       	cpc	r29, r1
     794:	38 f4       	brcc	.+14     	; 0x7a4 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     796:	8c 0d       	add	r24, r12
     798:	9d 1d       	adc	r25, r13
     79a:	be 01       	movw	r22, r28
     79c:	0e 94 bb 0c 	call	0x1976	; 0x1976 <__udivmodhi4>
     7a0:	cb 01       	movw	r24, r22
     7a2:	0e c0       	rjmp	.+28     	; 0x7c0 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     7a4:	a7 01       	movw	r20, r14
     7a6:	96 01       	movw	r18, r12
     7a8:	28 0f       	add	r18, r24
     7aa:	39 1f       	adc	r19, r25
     7ac:	41 1d       	adc	r20, r1
     7ae:	51 1d       	adc	r21, r1
     7b0:	ca 01       	movw	r24, r20
     7b2:	b9 01       	movw	r22, r18
     7b4:	9e 01       	movw	r18, r28
     7b6:	40 e0       	ldi	r20, 0x00	; 0
     7b8:	50 e0       	ldi	r21, 0x00	; 0
     7ba:	0e 94 cf 0c 	call	0x199e	; 0x199e <__udivmodsi4>
     7be:	c9 01       	movw	r24, r18
     7c0:	cd b7       	in	r28, 0x3d	; 61
     7c2:	de b7       	in	r29, 0x3e	; 62
     7c4:	e8 e0       	ldi	r30, 0x08	; 8
     7c6:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__epilogue_restores__+0x14>

000007ca <_ZN15OrangutanAnalog12toMillivoltsEj>:
     7ca:	cf 92       	push	r12
     7cc:	df 92       	push	r13
     7ce:	ef 92       	push	r14
     7d0:	ff 92       	push	r15
     7d2:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7d6:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7da:	9c 01       	movw	r18, r24
     7dc:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__umulhisi3>
     7e0:	6b 01       	movw	r12, r22
     7e2:	7c 01       	movw	r14, r24
     7e4:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN15OrangutanAnalog7getModeEv>
     7e8:	88 23       	and	r24, r24
     7ea:	59 f0       	breq	.+22     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7ec:	c7 01       	movw	r24, r14
     7ee:	b6 01       	movw	r22, r12
     7f0:	61 58       	subi	r22, 0x81	; 129
     7f2:	7f 4f       	sbci	r23, 0xFF	; 255
     7f4:	8f 4f       	sbci	r24, 0xFF	; 255
     7f6:	9f 4f       	sbci	r25, 0xFF	; 255
     7f8:	2f ef       	ldi	r18, 0xFF	; 255
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	0a c0       	rjmp	.+20     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     802:	c7 01       	movw	r24, r14
     804:	b6 01       	movw	r22, r12
     806:	61 50       	subi	r22, 0x01	; 1
     808:	7e 4f       	sbci	r23, 0xFE	; 254
     80a:	8f 4f       	sbci	r24, 0xFF	; 255
     80c:	9f 4f       	sbci	r25, 0xFF	; 255
     80e:	2f ef       	ldi	r18, 0xFF	; 255
     810:	33 e0       	ldi	r19, 0x03	; 3
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	0e 94 cf 0c 	call	0x199e	; 0x199e <__udivmodsi4>
     81a:	c9 01       	movw	r24, r18
     81c:	ff 90       	pop	r15
     81e:	ef 90       	pop	r14
     820:	df 90       	pop	r13
     822:	cf 90       	pop	r12
     824:	08 95       	ret

00000826 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     826:	0e 94 9f 03 	call	0x73e	; 0x73e <_ZN15OrangutanAnalog11readAverageEhj>
     82a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <_ZN15OrangutanAnalog12toMillivoltsEj>
     82e:	08 95       	ret

00000830 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     830:	1f 93       	push	r17
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	0e 94 75 03 	call	0x6ea	; 0x6ea <_ZN15OrangutanAnalog7getModeEv>
     83a:	18 2f       	mov	r17, r24
     83c:	0e 94 64 03 	call	0x6c8	; 0x6c8 <_ZN15OrangutanAnalog7setModeEh.part.0>
     840:	6a e0       	ldi	r22, 0x0A	; 10
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	86 e0       	ldi	r24, 0x06	; 6
     846:	0e 94 13 04 	call	0x826	; 0x826 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     84a:	ec 01       	movw	r28, r24
     84c:	81 2f       	mov	r24, r17
     84e:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <_ZN15OrangutanAnalog7setModeEh>
     852:	ce 01       	movw	r24, r28
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	8c 0f       	add	r24, r28
     85a:	9d 1f       	adc	r25, r29
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	96 95       	lsr	r25
     860:	87 95       	ror	r24
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	08 95       	ret

0000086a <read_battery_millivolts_3pi>:
     86a:	0e 94 18 04 	call	0x830	; 0x830 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     86e:	08 95       	ret

00000870 <delay_us.constprop.0>:
     870:	81 e0       	ldi	r24, 0x01	; 1
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	6f 93       	push	r22
     876:	64 e0       	ldi	r22, 0x04	; 4
     878:	6a 95       	dec	r22
     87a:	f1 f7       	brne	.-4      	; 0x878 <delay_us.constprop.0+0x8>
     87c:	6f 91       	pop	r22
     87e:	01 97       	sbiw	r24, 0x01	; 1
     880:	c9 f7       	brne	.-14     	; 0x874 <delay_us.constprop.0+0x4>
     882:	08 95       	ret

00000884 <_ZN12OrangutanLCD8busyWaitEv>:
     884:	0f 93       	push	r16
     886:	1f 93       	push	r17
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	1a b1       	in	r17, 0x0a	; 10
     88e:	57 98       	cbi	0x0a, 7	; 10
     890:	5a 98       	cbi	0x0b, 2	; 11
     892:	28 9a       	sbi	0x05, 0	; 5
     894:	c0 e0       	ldi	r28, 0x00	; 0
     896:	d0 e0       	ldi	r29, 0x00	; 0
     898:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     89c:	5c 9a       	sbi	0x0b, 4	; 11
     89e:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     8a2:	09 b1       	in	r16, 0x09	; 9
     8a4:	5c 98       	cbi	0x0b, 4	; 11
     8a6:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     8aa:	5c 9a       	sbi	0x0b, 4	; 11
     8ac:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     8b0:	5c 98       	cbi	0x0b, 4	; 11
     8b2:	24 96       	adiw	r28, 0x04	; 4
     8b4:	07 ff       	sbrs	r16, 7
     8b6:	10 c0       	rjmp	.+32     	; 0x8d8 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     8b8:	ae 01       	movw	r20, r28
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     8c2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     8c6:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <__data_end+0x2>
     8ca:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <__data_end+0x3>
     8ce:	48 17       	cp	r20, r24
     8d0:	59 07       	cpc	r21, r25
     8d2:	6a 07       	cpc	r22, r26
     8d4:	7b 07       	cpc	r23, r27
     8d6:	00 f3       	brcs	.-64     	; 0x898 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     8d8:	1a b9       	out	0x0a, r17	; 10
     8da:	df 91       	pop	r29
     8dc:	cf 91       	pop	r28
     8de:	1f 91       	pop	r17
     8e0:	0f 91       	pop	r16
     8e2:	08 95       	ret

000008e4 <_ZN12OrangutanLCD8sendDataEh>:
     8e4:	95 b1       	in	r25, 0x05	; 5
     8e6:	28 2f       	mov	r18, r24
     8e8:	21 70       	andi	r18, 0x01	; 1
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	22 0f       	add	r18, r18
     8ee:	33 1f       	adc	r19, r19
     8f0:	48 2f       	mov	r20, r24
     8f2:	46 70       	andi	r20, 0x06	; 6
     8f4:	68 e0       	ldi	r22, 0x08	; 8
     8f6:	46 9f       	mul	r20, r22
     8f8:	a0 01       	movw	r20, r0
     8fa:	11 24       	eor	r1, r1
     8fc:	24 2b       	or	r18, r20
     8fe:	9d 7c       	andi	r25, 0xCD	; 205
     900:	29 2b       	or	r18, r25
     902:	25 b9       	out	0x05, r18	; 5
     904:	9b b1       	in	r25, 0x0b	; 11
     906:	88 70       	andi	r24, 0x08	; 8
     908:	82 95       	swap	r24
     90a:	80 7f       	andi	r24, 0xF0	; 240
     90c:	9f 77       	andi	r25, 0x7F	; 127
     90e:	89 2b       	or	r24, r25
     910:	8b b9       	out	0x0b, r24	; 11
     912:	5c 9a       	sbi	0x0b, 4	; 11
     914:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     918:	5c 98       	cbi	0x0b, 4	; 11
     91a:	0e 94 38 04 	call	0x870	; 0x870 <delay_us.constprop.0>
     91e:	08 95       	ret

00000920 <_ZN12OrangutanLCD4sendEhhh>:
     920:	a0 e0       	ldi	r26, 0x00	; 0
     922:	b0 e0       	ldi	r27, 0x00	; 0
     924:	e6 e9       	ldi	r30, 0x96	; 150
     926:	f4 e0       	ldi	r31, 0x04	; 4
     928:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__prologue_saves__+0x16>
     92c:	c8 2f       	mov	r28, r24
     92e:	d6 2e       	mov	r13, r22
     930:	e4 2e       	mov	r14, r20
     932:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     936:	81 11       	cpse	r24, r1
     938:	05 c0       	rjmp	.+10     	; 0x944 <_ZN12OrangutanLCD4sendEhhh+0x24>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     940:	0e 94 00 05 	call	0xa00	; 0xa00 <_ZN12OrangutanLCD5init2Ev>
     944:	0e 94 42 04 	call	0x884	; 0x884 <_ZN12OrangutanLCD8busyWaitEv>
     948:	14 b1       	in	r17, 0x04	; 4
     94a:	d5 b1       	in	r29, 0x05	; 5
     94c:	fa b0       	in	r15, 0x0a	; 10
     94e:	0b b1       	in	r16, 0x0b	; 11
     950:	28 98       	cbi	0x05, 0	; 5
     952:	dd 20       	and	r13, r13
     954:	11 f0       	breq	.+4      	; 0x95a <_ZN12OrangutanLCD4sendEhhh+0x3a>
     956:	5a 9a       	sbi	0x0b, 2	; 11
     958:	01 c0       	rjmp	.+2      	; 0x95c <_ZN12OrangutanLCD4sendEhhh+0x3c>
     95a:	5a 98       	cbi	0x0b, 2	; 11
     95c:	94 b1       	in	r25, 0x04	; 4
     95e:	92 63       	ori	r25, 0x32	; 50
     960:	94 b9       	out	0x04, r25	; 4
     962:	57 9a       	sbi	0x0a, 7	; 10
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	e8 16       	cp	r14, r24
     968:	29 f0       	breq	.+10     	; 0x974 <_ZN12OrangutanLCD4sendEhhh+0x54>
     96a:	8c 2f       	mov	r24, r28
     96c:	82 95       	swap	r24
     96e:	8f 70       	andi	r24, 0x0F	; 15
     970:	0e 94 72 04 	call	0x8e4	; 0x8e4 <_ZN12OrangutanLCD8sendDataEh>
     974:	8c 2f       	mov	r24, r28
     976:	8f 70       	andi	r24, 0x0F	; 15
     978:	0e 94 72 04 	call	0x8e4	; 0x8e4 <_ZN12OrangutanLCD8sendDataEh>
     97c:	fa b8       	out	0x0a, r15	; 10
     97e:	0b b9       	out	0x0b, r16	; 11
     980:	14 b9       	out	0x04, r17	; 4
     982:	d5 b9       	out	0x05, r29	; 5
     984:	cd b7       	in	r28, 0x3d	; 61
     986:	de b7       	in	r29, 0x3e	; 62
     988:	e7 e0       	ldi	r30, 0x07	; 7
     98a:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__epilogue_restores__+0x16>

0000098e <_ZN12OrangutanLCD8send_cmdEh>:
     98e:	42 e0       	ldi	r20, 0x02	; 2
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	0e 94 90 04 	call	0x920	; 0x920 <_ZN12OrangutanLCD4sendEhhh>
     996:	08 95       	ret

00000998 <_ZN12OrangutanLCD9send_dataEh>:
     998:	42 e0       	ldi	r20, 0x02	; 2
     99a:	61 e0       	ldi	r22, 0x01	; 1
     99c:	0e 94 90 04 	call	0x920	; 0x920 <_ZN12OrangutanLCD4sendEhhh>
     9a0:	08 95       	ret

000009a2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     9a2:	a1 e0       	ldi	r26, 0x01	; 1
     9a4:	b0 e0       	ldi	r27, 0x00	; 0
     9a6:	e7 ed       	ldi	r30, 0xD7	; 215
     9a8:	f4 e0       	ldi	r31, 0x04	; 4
     9aa:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__prologue_saves__+0x18>
     9ae:	8c 01       	movw	r16, r24
     9b0:	66 0f       	add	r22, r22
     9b2:	66 0f       	add	r22, r22
     9b4:	66 0f       	add	r22, r22
     9b6:	e1 2c       	mov	r14, r1
     9b8:	f1 2c       	mov	r15, r1
     9ba:	8e 2d       	mov	r24, r14
     9bc:	86 0f       	add	r24, r22
     9be:	80 64       	ori	r24, 0x40	; 64
     9c0:	69 83       	std	Y+1, r22	; 0x01
     9c2:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     9c6:	f8 01       	movw	r30, r16
     9c8:	ee 0d       	add	r30, r14
     9ca:	ff 1d       	adc	r31, r15
     9cc:	84 91       	lpm	r24, Z
     9ce:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN12OrangutanLCD9send_dataEh>
     9d2:	8f ef       	ldi	r24, 0xFF	; 255
     9d4:	e8 1a       	sub	r14, r24
     9d6:	f8 0a       	sbc	r15, r24
     9d8:	69 81       	ldd	r22, Y+1	; 0x01
     9da:	e8 e0       	ldi	r30, 0x08	; 8
     9dc:	ee 16       	cp	r14, r30
     9de:	f1 04       	cpc	r15, r1
     9e0:	61 f7       	brne	.-40     	; 0x9ba <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x18>
     9e2:	21 96       	adiw	r28, 0x01	; 1
     9e4:	e6 e0       	ldi	r30, 0x06	; 6
     9e6:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__epilogue_restores__+0x18>

000009ea <lcd_load_custom_character>:
     9ea:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     9ee:	08 95       	ret

000009f0 <print_character>:
     9f0:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN12OrangutanLCD9send_dataEh>
     9f4:	08 95       	ret

000009f6 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     9f6:	41 e0       	ldi	r20, 0x01	; 1
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	0e 94 90 04 	call	0x920	; 0x920 <_ZN12OrangutanLCD4sendEhhh>
     9fe:	08 95       	ret

00000a00 <_ZN12OrangutanLCD5init2Ev>:
     a00:	80 e1       	ldi	r24, 0x10	; 16
     a02:	97 e2       	ldi	r25, 0x27	; 39
     a04:	a0 e0       	ldi	r26, 0x00	; 0
     a06:	b0 e0       	ldi	r27, 0x00	; 0
     a08:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
     a0c:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
     a10:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <__data_end+0x2>
     a14:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <__data_end+0x3>
     a18:	52 9a       	sbi	0x0a, 2	; 10
     a1a:	20 9a       	sbi	0x04, 0	; 4
     a1c:	54 9a       	sbi	0x0a, 4	; 10
     a1e:	8e e1       	ldi	r24, 0x1E	; 30
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     a26:	83 e0       	ldi	r24, 0x03	; 3
     a28:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a2c:	86 e0       	ldi	r24, 0x06	; 6
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     a34:	83 e0       	ldi	r24, 0x03	; 3
     a36:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a3a:	82 e0       	ldi	r24, 0x02	; 2
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     a42:	83 e0       	ldi	r24, 0x03	; 3
     a44:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a48:	82 e0       	ldi	r24, 0x02	; 2
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     a50:	82 e0       	ldi	r24, 0x02	; 2
     a52:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a56:	82 e0       	ldi	r24, 0x02	; 2
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     a5e:	88 e2       	ldi	r24, 0x28	; 40
     a60:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a64:	88 e0       	ldi	r24, 0x08	; 8
     a66:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a70:	86 e0       	ldi	r24, 0x06	; 6
     a72:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a76:	8c e0       	ldi	r24, 0x0C	; 12
     a78:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a7c:	08 95       	ret

00000a7e <_ZN12OrangutanLCD5clearEv>:
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     a84:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <printf_chars>
     a88:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <printf_chars+0x1>
     a8c:	89 2b       	or	r24, r25
     a8e:	f9 f0       	breq	.+62     	; 0xace <_ZN12OrangutanLCD5clearEv+0x50>
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	a0 e2       	ldi	r26, 0x20	; 32
     a94:	26 2f       	mov	r18, r22
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     a9c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	78 9f       	mul	r23, r24
     aa6:	a0 01       	movw	r20, r0
     aa8:	79 9f       	mul	r23, r25
     aaa:	50 0d       	add	r21, r0
     aac:	11 24       	eor	r1, r1
     aae:	24 17       	cp	r18, r20
     ab0:	35 07       	cpc	r19, r21
     ab2:	4c f4       	brge	.+18     	; 0xac6 <_ZN12OrangutanLCD5clearEv+0x48>
     ab4:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <printf_chars>
     ab8:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <printf_chars+0x1>
     abc:	e2 0f       	add	r30, r18
     abe:	f3 1f       	adc	r31, r19
     ac0:	a0 83       	st	Z, r26
     ac2:	6f 5f       	subi	r22, 0xFF	; 255
     ac4:	e7 cf       	rjmp	.-50     	; 0xa94 <_ZN12OrangutanLCD5clearEv+0x16>
     ac6:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <col>
     aca:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <row>
     ace:	08 95       	ret

00000ad0 <clear>:
     ad0:	0e 94 3f 05 	call	0xa7e	; 0xa7e <_ZN12OrangutanLCD5clearEv>
     ad4:	08 95       	ret

00000ad6 <_ZN12OrangutanLCD5printEPKc>:
     ad6:	cf 93       	push	r28
     ad8:	df 93       	push	r29
     ada:	ec 01       	movw	r28, r24
     adc:	89 91       	ld	r24, Y+
     ade:	88 23       	and	r24, r24
     ae0:	19 f0       	breq	.+6      	; 0xae8 <_ZN12OrangutanLCD5printEPKc+0x12>
     ae2:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN12OrangutanLCD9send_dataEh>
     ae6:	fa cf       	rjmp	.-12     	; 0xadc <_ZN12OrangutanLCD5printEPKc+0x6>
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	08 95       	ret

00000aee <print>:
     aee:	0e 94 6b 05 	call	0xad6	; 0xad6 <_ZN12OrangutanLCD5printEPKc>
     af2:	08 95       	ret

00000af4 <_ZN12OrangutanLCD5printEm>:
     af4:	aa e0       	ldi	r26, 0x0A	; 10
     af6:	b0 e0       	ldi	r27, 0x00	; 0
     af8:	e0 e8       	ldi	r30, 0x80	; 128
     afa:	f5 e0       	ldi	r31, 0x05	; 5
     afc:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__prologue_saves__+0x14>
     b00:	1a e0       	ldi	r17, 0x0A	; 10
     b02:	5a e0       	ldi	r21, 0x0A	; 10
     b04:	c5 2e       	mov	r12, r21
     b06:	d1 2c       	mov	r13, r1
     b08:	e1 2c       	mov	r14, r1
     b0a:	f1 2c       	mov	r15, r1
     b0c:	06 2f       	mov	r16, r22
     b0e:	a7 01       	movw	r20, r14
     b10:	96 01       	movw	r18, r12
     b12:	0e 94 cf 0c 	call	0x199e	; 0x199e <__udivmodsi4>
     b16:	ca 01       	movw	r24, r20
     b18:	b9 01       	movw	r22, r18
     b1a:	11 50       	subi	r17, 0x01	; 1
     b1c:	e1 e0       	ldi	r30, 0x01	; 1
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	ec 0f       	add	r30, r28
     b22:	fd 1f       	adc	r31, r29
     b24:	e1 0f       	add	r30, r17
     b26:	f1 1d       	adc	r31, r1
     b28:	00 5d       	subi	r16, 0xD0	; 208
     b2a:	2a e0       	ldi	r18, 0x0A	; 10
     b2c:	62 9f       	mul	r22, r18
     b2e:	00 19       	sub	r16, r0
     b30:	11 24       	eor	r1, r1
     b32:	00 83       	st	Z, r16
     b34:	61 15       	cp	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	81 05       	cpc	r24, r1
     b3a:	91 05       	cpc	r25, r1
     b3c:	39 f7       	brne	.-50     	; 0xb0c <_ZN12OrangutanLCD5printEm+0x18>
     b3e:	1a 30       	cpi	r17, 0x0A	; 10
     b40:	58 f4       	brcc	.+22     	; 0xb58 <_ZN12OrangutanLCD5printEm+0x64>
     b42:	e1 e0       	ldi	r30, 0x01	; 1
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	ec 0f       	add	r30, r28
     b48:	fd 1f       	adc	r31, r29
     b4a:	e1 0f       	add	r30, r17
     b4c:	f1 1d       	adc	r31, r1
     b4e:	80 81       	ld	r24, Z
     b50:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN12OrangutanLCD9send_dataEh>
     b54:	1f 5f       	subi	r17, 0xFF	; 255
     b56:	f3 cf       	rjmp	.-26     	; 0xb3e <_ZN12OrangutanLCD5printEm+0x4a>
     b58:	2a 96       	adiw	r28, 0x0a	; 10
     b5a:	e8 e0       	ldi	r30, 0x08	; 8
     b5c:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__epilogue_restores__+0x14>

00000b60 <_ZN12OrangutanLCD5printEl>:
     b60:	cf 92       	push	r12
     b62:	df 92       	push	r13
     b64:	ef 92       	push	r14
     b66:	ff 92       	push	r15
     b68:	6b 01       	movw	r12, r22
     b6a:	7c 01       	movw	r14, r24
     b6c:	97 ff       	sbrs	r25, 7
     b6e:	0b c0       	rjmp	.+22     	; 0xb86 <_ZN12OrangutanLCD5printEl+0x26>
     b70:	f0 94       	com	r15
     b72:	e0 94       	com	r14
     b74:	d0 94       	com	r13
     b76:	c0 94       	com	r12
     b78:	c1 1c       	adc	r12, r1
     b7a:	d1 1c       	adc	r13, r1
     b7c:	e1 1c       	adc	r14, r1
     b7e:	f1 1c       	adc	r15, r1
     b80:	8d e2       	ldi	r24, 0x2D	; 45
     b82:	0e 94 cc 04 	call	0x998	; 0x998 <_ZN12OrangutanLCD9send_dataEh>
     b86:	c7 01       	movw	r24, r14
     b88:	b6 01       	movw	r22, r12
     b8a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <_ZN12OrangutanLCD5printEm>
     b8e:	ff 90       	pop	r15
     b90:	ef 90       	pop	r14
     b92:	df 90       	pop	r13
     b94:	cf 90       	pop	r12
     b96:	08 95       	ret

00000b98 <print_long>:
     b98:	0e 94 b0 05 	call	0xb60	; 0xb60 <_ZN12OrangutanLCD5printEl>
     b9c:	08 95       	ret

00000b9e <_ZN12OrangutanLCD6gotoXYEhh>:
     b9e:	a5 e0       	ldi	r26, 0x05	; 5
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	e5 ed       	ldi	r30, 0xD5	; 213
     ba4:	f5 e0       	ldi	r31, 0x05	; 5
     ba6:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__prologue_saves__+0x1e>
     baa:	18 2f       	mov	r17, r24
     bac:	80 e8       	ldi	r24, 0x80	; 128
     bae:	89 83       	std	Y+1, r24	; 0x01
     bb0:	80 ec       	ldi	r24, 0xC0	; 192
     bb2:	8a 83       	std	Y+2, r24	; 0x02
     bb4:	84 e9       	ldi	r24, 0x94	; 148
     bb6:	8b 83       	std	Y+3, r24	; 0x03
     bb8:	84 ed       	ldi	r24, 0xD4	; 212
     bba:	8c 83       	std	Y+4, r24	; 0x04
     bbc:	fe 01       	movw	r30, r28
     bbe:	e6 0f       	add	r30, r22
     bc0:	f1 1d       	adc	r31, r1
     bc2:	81 81       	ldd	r24, Z+1	; 0x01
     bc4:	81 0f       	add	r24, r17
     bc6:	6d 83       	std	Y+5, r22	; 0x05
     bc8:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN12OrangutanLCD8send_cmdEh>
     bcc:	10 93 3c 01 	sts	0x013C, r17	; 0x80013c <col>
     bd0:	6d 81       	ldd	r22, Y+5	; 0x05
     bd2:	60 93 3d 01 	sts	0x013D, r22	; 0x80013d <row>
     bd6:	25 96       	adiw	r28, 0x05	; 5
     bd8:	e3 e0       	ldi	r30, 0x03	; 3
     bda:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__epilogue_restores__+0x1e>

00000bde <lcd_goto_xy>:
     bde:	0e 94 cf 05 	call	0xb9e	; 0xb9e <_ZN12OrangutanLCD6gotoXYEhh>
     be2:	08 95       	ret

00000be4 <_ZN16OrangutanDigital9setOutputEhh>:
     be4:	88 30       	cpi	r24, 0x08	; 8
     be6:	58 f4       	brcc	.+22     	; 0xbfe <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     be8:	91 e0       	ldi	r25, 0x01	; 1
     bea:	01 c0       	rjmp	.+2      	; 0xbee <_ZN16OrangutanDigital9setOutputEhh+0xa>
     bec:	99 0f       	add	r25, r25
     bee:	8a 95       	dec	r24
     bf0:	ea f7       	brpl	.-6      	; 0xbec <_ZN16OrangutanDigital9setOutputEhh+0x8>
     bf2:	89 2f       	mov	r24, r25
     bf4:	aa e2       	ldi	r26, 0x2A	; 42
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	eb e2       	ldi	r30, 0x2B	; 43
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	21 c0       	rjmp	.+66     	; 0xc40 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     bfe:	8e 30       	cpi	r24, 0x0E	; 14
     c00:	60 f4       	brcc	.+24     	; 0xc1a <_ZN16OrangutanDigital9setOutputEhh+0x36>
     c02:	98 ef       	ldi	r25, 0xF8	; 248
     c04:	98 0f       	add	r25, r24
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	01 c0       	rjmp	.+2      	; 0xc0c <_ZN16OrangutanDigital9setOutputEhh+0x28>
     c0a:	88 0f       	add	r24, r24
     c0c:	9a 95       	dec	r25
     c0e:	ea f7       	brpl	.-6      	; 0xc0a <_ZN16OrangutanDigital9setOutputEhh+0x26>
     c10:	a4 e2       	ldi	r26, 0x24	; 36
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	e5 e2       	ldi	r30, 0x25	; 37
     c16:	f0 e0       	ldi	r31, 0x00	; 0
     c18:	13 c0       	rjmp	.+38     	; 0xc40 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c1a:	85 31       	cpi	r24, 0x15	; 21
     c1c:	60 f4       	brcc	.+24     	; 0xc36 <_ZN16OrangutanDigital9setOutputEhh+0x52>
     c1e:	92 ef       	ldi	r25, 0xF2	; 242
     c20:	98 0f       	add	r25, r24
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	01 c0       	rjmp	.+2      	; 0xc28 <_ZN16OrangutanDigital9setOutputEhh+0x44>
     c26:	88 0f       	add	r24, r24
     c28:	9a 95       	dec	r25
     c2a:	ea f7       	brpl	.-6      	; 0xc26 <_ZN16OrangutanDigital9setOutputEhh+0x42>
     c2c:	a7 e2       	ldi	r26, 0x27	; 39
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	e8 e2       	ldi	r30, 0x28	; 40
     c32:	f0 e0       	ldi	r31, 0x00	; 0
     c34:	05 c0       	rjmp	.+10     	; 0xc40 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	a0 e0       	ldi	r26, 0x00	; 0
     c3a:	b0 e0       	ldi	r27, 0x00	; 0
     c3c:	e0 e0       	ldi	r30, 0x00	; 0
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	6f 3f       	cpi	r22, 0xFF	; 255
     c42:	19 f4       	brne	.+6      	; 0xc4a <_ZN16OrangutanDigital9setOutputEhh+0x66>
     c44:	90 81       	ld	r25, Z
     c46:	98 27       	eor	r25, r24
     c48:	09 c0       	rjmp	.+18     	; 0xc5c <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c4a:	66 23       	and	r22, r22
     c4c:	19 f0       	breq	.+6      	; 0xc54 <_ZN16OrangutanDigital9setOutputEhh+0x70>
     c4e:	90 81       	ld	r25, Z
     c50:	98 2b       	or	r25, r24
     c52:	04 c0       	rjmp	.+8      	; 0xc5c <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c54:	20 81       	ld	r18, Z
     c56:	98 2f       	mov	r25, r24
     c58:	90 95       	com	r25
     c5a:	92 23       	and	r25, r18
     c5c:	90 83       	st	Z, r25
     c5e:	9c 91       	ld	r25, X
     c60:	98 2b       	or	r25, r24
     c62:	9c 93       	st	X, r25
     c64:	08 95       	ret

00000c66 <_ZN15OrangutanMotors5init2Ev>:
     c66:	83 ef       	ldi	r24, 0xF3	; 243
     c68:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     c6c:	84 bd       	out	0x24, r24	; 36
     c6e:	82 e0       	ldi	r24, 0x02	; 2
     c70:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     c74:	85 bd       	out	0x25, r24	; 37
     c76:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     c7a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     c7e:	18 bc       	out	0x28, r1	; 40
     c80:	17 bc       	out	0x27, r1	; 39
     c82:	60 e0       	ldi	r22, 0x00	; 0
     c84:	86 e0       	ldi	r24, 0x06	; 6
     c86:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_ZN16OrangutanDigital9setOutputEhh>
     c8a:	60 e0       	ldi	r22, 0x00	; 0
     c8c:	85 e0       	ldi	r24, 0x05	; 5
     c8e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_ZN16OrangutanDigital9setOutputEhh>
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	8b e0       	ldi	r24, 0x0B	; 11
     c96:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_ZN16OrangutanDigital9setOutputEhh>
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	83 e0       	ldi	r24, 0x03	; 3
     c9e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_ZN16OrangutanDigital9setOutputEhh>
     ca2:	08 95       	ret

00000ca4 <_ZN15OrangutanMotors4initEv>:
     ca4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     ca8:	81 11       	cpse	r24, r1
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <_ZN15OrangutanMotors4initEv+0x12>
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     cb2:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZN15OrangutanMotors5init2Ev>
     cb6:	08 95       	ret

00000cb8 <_ZN15OrangutanMotors10setM1SpeedEi>:
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	ec 01       	movw	r28, r24
     cbe:	0e 94 52 06 	call	0xca4	; 0xca4 <_ZN15OrangutanMotors4initEv>
     cc2:	d7 ff       	sbrs	r29, 7
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     cc6:	d1 95       	neg	r29
     cc8:	c1 95       	neg	r28
     cca:	d1 09       	sbc	r29, r1
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	01 c0       	rjmp	.+2      	; 0xcd2 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	cf 3f       	cpi	r28, 0xFF	; 255
     cd4:	d1 05       	cpc	r29, r1
     cd6:	19 f0       	breq	.+6      	; 0xcde <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cd8:	14 f0       	brlt	.+4      	; 0xcde <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cda:	cf ef       	ldi	r28, 0xFF	; 255
     cdc:	d0 e0       	ldi	r29, 0x00	; 0
     cde:	88 23       	and	r24, r24
     ce0:	19 f0       	breq	.+6      	; 0xce8 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     ce2:	18 bc       	out	0x28, r1	; 40
     ce4:	c7 bd       	out	0x27, r28	; 39
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     ce8:	c8 bd       	out	0x28, r28	; 40
     cea:	17 bc       	out	0x27, r1	; 39
     cec:	df 91       	pop	r29
     cee:	cf 91       	pop	r28
     cf0:	08 95       	ret

00000cf2 <_ZN15OrangutanMotors10setM2SpeedEi>:
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
     cf6:	ec 01       	movw	r28, r24
     cf8:	0e 94 52 06 	call	0xca4	; 0xca4 <_ZN15OrangutanMotors4initEv>
     cfc:	d7 ff       	sbrs	r29, 7
     cfe:	05 c0       	rjmp	.+10     	; 0xd0a <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     d00:	d1 95       	neg	r29
     d02:	c1 95       	neg	r28
     d04:	d1 09       	sbc	r29, r1
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	01 c0       	rjmp	.+2      	; 0xd0c <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	cf 3f       	cpi	r28, 0xFF	; 255
     d0e:	d1 05       	cpc	r29, r1
     d10:	19 f0       	breq	.+6      	; 0xd18 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d12:	14 f0       	brlt	.+4      	; 0xd18 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d14:	cf ef       	ldi	r28, 0xFF	; 255
     d16:	d0 e0       	ldi	r29, 0x00	; 0
     d18:	88 23       	and	r24, r24
     d1a:	29 f0       	breq	.+10     	; 0xd26 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     d1c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d20:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d24:	04 c0       	rjmp	.+8      	; 0xd2e <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     d26:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d2a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	08 95       	ret

00000d34 <_ZN15OrangutanMotors9setSpeedsEii>:
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	eb 01       	movw	r28, r22
     d3a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZN15OrangutanMotors10setM1SpeedEi>
     d3e:	ce 01       	movw	r24, r28
     d40:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN15OrangutanMotors10setM2SpeedEi>
     d44:	df 91       	pop	r29
     d46:	cf 91       	pop	r28
     d48:	08 95       	ret

00000d4a <set_motors>:
     d4a:	0e 94 9a 06 	call	0xd34	; 0xd34 <_ZN15OrangutanMotors9setSpeedsEii>
     d4e:	08 95       	ret

00000d50 <_ZN20OrangutanPushbuttons5init2Ev>:
     d50:	84 b1       	in	r24, 0x04	; 4
     d52:	8d 7c       	andi	r24, 0xCD	; 205
     d54:	84 b9       	out	0x04, r24	; 4
     d56:	85 b1       	in	r24, 0x05	; 5
     d58:	82 63       	ori	r24, 0x32	; 50
     d5a:	85 b9       	out	0x05, r24	; 5
     d5c:	85 e0       	ldi	r24, 0x05	; 5
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	6f 93       	push	r22
     d62:	64 e0       	ldi	r22, 0x04	; 4
     d64:	6a 95       	dec	r22
     d66:	f1 f7       	brne	.-4      	; 0xd64 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     d68:	6f 91       	pop	r22
     d6a:	01 97       	sbiw	r24, 0x01	; 1
     d6c:	c9 f7       	brne	.-14     	; 0xd60 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     d6e:	08 95       	ret

00000d70 <_ZN20OrangutanPushbuttons4initEv>:
     d70:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d74:	81 11       	cpse	r24, r1
     d76:	05 c0       	rjmp	.+10     	; 0xd82 <_ZN20OrangutanPushbuttons4initEv+0x12>
     d78:	81 e0       	ldi	r24, 0x01	; 1
     d7a:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d7e:	0e 94 a8 06 	call	0xd50	; 0xd50 <_ZN20OrangutanPushbuttons5init2Ev>
     d82:	08 95       	ret

00000d84 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     d84:	cf 93       	push	r28
     d86:	c8 2f       	mov	r28, r24
     d88:	0e 94 b8 06 	call	0xd70	; 0xd70 <_ZN20OrangutanPushbuttons4initEv>
     d8c:	83 b1       	in	r24, 0x03	; 3
     d8e:	8c 23       	and	r24, r28
     d90:	e9 f3       	breq	.-6      	; 0xd8c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d92:	8a e0       	ldi	r24, 0x0A	; 10
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0e 94 33 07 	call	0xe66	; 0xe66 <delay_ms>
     d9a:	83 b1       	in	r24, 0x03	; 3
     d9c:	8c 23       	and	r24, r28
     d9e:	b1 f3       	breq	.-20     	; 0xd8c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     da0:	83 b1       	in	r24, 0x03	; 3
     da2:	8c 23       	and	r24, r28
     da4:	cf 91       	pop	r28
     da6:	08 95       	ret

00000da8 <wait_for_button_release>:
     da8:	0e 94 c2 06 	call	0xd84	; 0xd84 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     dac:	08 95       	ret

00000dae <_ZN20OrangutanPushbuttons9isPressedEh>:
     dae:	a1 e0       	ldi	r26, 0x01	; 1
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	ed ed       	ldi	r30, 0xDD	; 221
     db4:	f6 e0       	ldi	r31, 0x06	; 6
     db6:	0c 94 48 0d 	jmp	0x1a90	; 0x1a90 <__prologue_saves__+0x20>
     dba:	89 83       	std	Y+1, r24	; 0x01
     dbc:	0e 94 b8 06 	call	0xd70	; 0xd70 <_ZN20OrangutanPushbuttons4initEv>
     dc0:	93 b1       	in	r25, 0x03	; 3
     dc2:	90 95       	com	r25
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	89 23       	and	r24, r25
     dc8:	21 96       	adiw	r28, 0x01	; 1
     dca:	e2 e0       	ldi	r30, 0x02	; 2
     dcc:	0c 94 64 0d 	jmp	0x1ac8	; 0x1ac8 <__epilogue_restores__+0x20>

00000dd0 <button_is_pressed>:
     dd0:	0e 94 d7 06 	call	0xdae	; 0xdae <_ZN20OrangutanPushbuttons9isPressedEh>
     dd4:	08 95       	ret

00000dd6 <__vector_9>:
     dd6:	2f 92       	push	r2
     dd8:	8f 93       	push	r24
     dda:	9f 93       	push	r25
     ddc:	2f b6       	in	r2, 0x3f	; 63
     dde:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tickCount+0x1>
     de2:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tickCount+0x2>
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <tickCount+0x1>
     dec:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <tickCount+0x2>
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x3>
     df6:	89 1f       	adc	r24, r25
     df8:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x3>
     dfc:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <us_over_10+0x1>
     e00:	9c 5f       	subi	r25, 0xFC	; 252
     e02:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e06:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <us_over_10>
     e0a:	80 51       	subi	r24, 0x10	; 16
     e0c:	97 42       	sbci	r25, 0x27	; 39
     e0e:	c0 f0       	brcs	.+48     	; 0xe40 <end>
     e10:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e14:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <us_over_10>
     e18:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <msCounter>
     e1c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <msCounter+0x1>
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <msCounter>
     e26:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <msCounter+0x1>
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter+0x2>
     e30:	89 1f       	adc	r24, r25
     e32:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter+0x2>
     e36:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <msCounter+0x3>
     e3a:	89 1f       	adc	r24, r25
     e3c:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <msCounter+0x3>

00000e40 <end>:
     e40:	2f be       	out	0x3f, r2	; 63
     e42:	9f 91       	pop	r25
     e44:	8f 91       	pop	r24
     e46:	2f 90       	pop	r2
     e48:	18 95       	reti

00000e4a <_ZN13OrangutanTime17delayMillisecondsEj>:
     e4a:	28 ee       	ldi	r18, 0xE8	; 232
     e4c:	33 e0       	ldi	r19, 0x03	; 3
     e4e:	01 97       	sbiw	r24, 0x01	; 1
     e50:	48 f0       	brcs	.+18     	; 0xe64 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     e52:	f9 01       	movw	r30, r18
     e54:	6f 93       	push	r22
     e56:	64 e0       	ldi	r22, 0x04	; 4
     e58:	6a 95       	dec	r22
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     e5c:	6f 91       	pop	r22
     e5e:	31 97       	sbiw	r30, 0x01	; 1
     e60:	c9 f7       	brne	.-14     	; 0xe54 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     e62:	f5 cf       	rjmp	.-22     	; 0xe4e <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     e64:	08 95       	ret

00000e66 <delay_ms>:
     e66:	0e 94 25 07 	call	0xe4a	; 0xe4a <_ZN13OrangutanTime17delayMillisecondsEj>
     e6a:	08 95       	ret

00000e6c <_ZN13OrangutanTime5init2Ev>:
     e6c:	e0 e7       	ldi	r30, 0x70	; 112
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	80 81       	ld	r24, Z
     e72:	8e 7f       	andi	r24, 0xFE	; 254
     e74:	80 83       	st	Z, r24
     e76:	a0 eb       	ldi	r26, 0xB0	; 176
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	8c 91       	ld	r24, X
     e7c:	83 60       	ori	r24, 0x03	; 3
     e7e:	8c 93       	st	X, r24
     e80:	a1 eb       	ldi	r26, 0xB1	; 177
     e82:	b0 e0       	ldi	r27, 0x00	; 0
     e84:	8c 91       	ld	r24, X
     e86:	80 7f       	andi	r24, 0xF0	; 240
     e88:	8c 93       	st	X, r24
     e8a:	8c 91       	ld	r24, X
     e8c:	82 60       	ori	r24, 0x02	; 2
     e8e:	8c 93       	st	X, r24
     e90:	b8 9a       	sbi	0x17, 0	; 23
     e92:	80 81       	ld	r24, Z
     e94:	81 60       	ori	r24, 0x01	; 1
     e96:	80 83       	st	Z, r24
     e98:	78 94       	sei
     e9a:	08 95       	ret

00000e9c <_ZN13OrangutanTime4initEv>:
     e9c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     ea0:	81 11       	cpse	r24, r1
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <_ZN13OrangutanTime4initEv+0x12>
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     eaa:	0e 94 36 07 	call	0xe6c	; 0xe6c <_ZN13OrangutanTime5init2Ev>
     eae:	08 95       	ret

00000eb0 <_ZN13OrangutanTime5resetEv>:
     eb0:	0e 94 4e 07 	call	0xe9c	; 0xe9c <_ZN13OrangutanTime4initEv>
     eb4:	e0 e7       	ldi	r30, 0x70	; 112
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	8e 7f       	andi	r24, 0xFE	; 254
     ebc:	80 83       	st	Z, r24
     ebe:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <msCounter>
     ec2:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <msCounter+0x1>
     ec6:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter+0x2>
     eca:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x3>
     ece:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <us_over_10+0x1>
     ed2:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <us_over_10>
     ed6:	80 81       	ld	r24, Z
     ed8:	81 60       	ori	r24, 0x01	; 1
     eda:	80 83       	st	Z, r24
     edc:	08 95       	ret

00000ede <calibrate_line_sensors>:
     ede:	68 2f       	mov	r22, r24
     ee0:	8a e4       	ldi	r24, 0x4A	; 74
     ee2:	91 e0       	ldi	r25, 0x01	; 1
     ee4:	0e 94 57 0b 	call	0x16ae	; 0x16ae <_ZN16PololuQTRSensors9calibrateEh>
     ee8:	08 95       	ret

00000eea <read_line>:
     eea:	46 2f       	mov	r20, r22
     eec:	20 e0       	ldi	r18, 0x00	; 0
     eee:	bc 01       	movw	r22, r24
     ef0:	8a e4       	ldi	r24, 0x4A	; 74
     ef2:	91 e0       	ldi	r25, 0x01	; 1
     ef4:	0e 94 28 0c 	call	0x1850	; 0x1850 <_ZN16PololuQTRSensors8readLineEPjhh>
     ef8:	08 95       	ret

00000efa <_ZN9Pololu3pi4initEjh>:
     efa:	0f 93       	push	r16
     efc:	cf 93       	push	r28
     efe:	df 93       	push	r29
     f00:	00 d0       	rcall	.+0      	; 0xf02 <_ZN9Pololu3pi4initEjh+0x8>
     f02:	00 d0       	rcall	.+0      	; 0xf04 <_ZN9Pololu3pi4initEjh+0xa>
     f04:	1f 92       	push	r1
     f06:	cd b7       	in	r28, 0x3d	; 61
     f08:	de b7       	in	r29, 0x3e	; 62
     f0a:	9c 01       	movw	r18, r24
     f0c:	85 e0       	ldi	r24, 0x05	; 5
     f0e:	e4 e1       	ldi	r30, 0x14	; 20
     f10:	f1 e0       	ldi	r31, 0x01	; 1
     f12:	de 01       	movw	r26, r28
     f14:	11 96       	adiw	r26, 0x01	; 1
     f16:	01 90       	ld	r0, Z+
     f18:	0d 92       	st	X+, r0
     f1a:	8a 95       	dec	r24
     f1c:	e1 f7       	brne	.-8      	; 0xf16 <_ZN9Pololu3pi4initEjh+0x1c>
     f1e:	66 23       	and	r22, r22
     f20:	11 f0       	breq	.+4      	; 0xf26 <_ZN9Pololu3pi4initEjh+0x2c>
     f22:	0f ef       	ldi	r16, 0xFF	; 255
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <_ZN9Pololu3pi4initEjh+0x2e>
     f26:	03 e1       	ldi	r16, 0x13	; 19
     f28:	45 e0       	ldi	r20, 0x05	; 5
     f2a:	be 01       	movw	r22, r28
     f2c:	6f 5f       	subi	r22, 0xFF	; 255
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	8a e4       	ldi	r24, 0x4A	; 74
     f32:	91 e0       	ldi	r25, 0x01	; 1
     f34:	0e 94 4f 08 	call	0x109e	; 0x109e <_ZN18PololuQTRSensorsRC4initEPhhjh>
     f38:	8a e4       	ldi	r24, 0x4A	; 74
     f3a:	91 e0       	ldi	r25, 0x01	; 1
     f3c:	0e 94 26 08 	call	0x104c	; 0x104c <_ZN16PololuQTRSensors11emittersOffEv>
     f40:	0e 94 58 07 	call	0xeb0	; 0xeb0 <_ZN13OrangutanTime5resetEv>
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	0f 91       	pop	r16
     f54:	08 95       	ret

00000f56 <pololu_3pi_init>:
     f56:	60 e0       	ldi	r22, 0x00	; 0
     f58:	0e 94 7d 07 	call	0xefa	; 0xefa <_ZN9Pololu3pi4initEjh>
     f5c:	08 95       	ret

00000f5e <_GLOBAL__sub_D_pololu_3pi_init>:
     f5e:	8a e4       	ldi	r24, 0x4A	; 74
     f60:	91 e0       	ldi	r25, 0x01	; 1
     f62:	0e 94 9d 0c 	call	0x193a	; 0x193a <_ZN16PololuQTRSensorsD1Ev>
     f66:	08 95       	ret

00000f68 <delay_us>:
     f68:	6f 93       	push	r22
     f6a:	64 e0       	ldi	r22, 0x04	; 4
     f6c:	6a 95       	dec	r22
     f6e:	f1 f7       	brne	.-4      	; 0xf6c <delay_us+0x4>
     f70:	6f 91       	pop	r22
     f72:	01 97       	sbiw	r24, 0x01	; 1
     f74:	c9 f7       	brne	.-14     	; 0xf68 <delay_us>
     f76:	08 95       	ret

00000f78 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     f78:	fc 01       	movw	r30, r24
     f7a:	11 82       	std	Z+1, r1	; 0x01
     f7c:	10 82       	st	Z, r1
     f7e:	13 82       	std	Z+3, r1	; 0x03
     f80:	12 82       	std	Z+2, r1	; 0x02
     f82:	15 82       	std	Z+5, r1	; 0x05
     f84:	14 82       	std	Z+4, r1	; 0x04
     f86:	16 82       	std	Z+6, r1	; 0x06
     f88:	68 30       	cpi	r22, 0x08	; 8
     f8a:	68 f4       	brcc	.+26     	; 0xfa6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     f8c:	89 e2       	ldi	r24, 0x29	; 41
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	80 83       	st	Z, r24
     f94:	8b e2       	ldi	r24, 0x2B	; 43
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	93 83       	std	Z+3, r25	; 0x03
     f9a:	82 83       	std	Z+2, r24	; 0x02
     f9c:	8a e2       	ldi	r24, 0x2A	; 42
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	95 83       	std	Z+5, r25	; 0x05
     fa2:	84 83       	std	Z+4, r24	; 0x04
     fa4:	1f c0       	rjmp	.+62     	; 0xfe4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     fa6:	6e 30       	cpi	r22, 0x0E	; 14
     fa8:	70 f4       	brcc	.+28     	; 0xfc6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     faa:	83 e2       	ldi	r24, 0x23	; 35
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	91 83       	std	Z+1, r25	; 0x01
     fb0:	80 83       	st	Z, r24
     fb2:	85 e2       	ldi	r24, 0x25	; 37
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	93 83       	std	Z+3, r25	; 0x03
     fb8:	82 83       	std	Z+2, r24	; 0x02
     fba:	84 e2       	ldi	r24, 0x24	; 36
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	95 83       	std	Z+5, r25	; 0x05
     fc0:	84 83       	std	Z+4, r24	; 0x04
     fc2:	68 50       	subi	r22, 0x08	; 8
     fc4:	0f c0       	rjmp	.+30     	; 0xfe4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     fc6:	65 31       	cpi	r22, 0x15	; 21
     fc8:	98 f4       	brcc	.+38     	; 0xff0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     fca:	86 e2       	ldi	r24, 0x26	; 38
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	91 83       	std	Z+1, r25	; 0x01
     fd0:	80 83       	st	Z, r24
     fd2:	88 e2       	ldi	r24, 0x28	; 40
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	93 83       	std	Z+3, r25	; 0x03
     fd8:	82 83       	std	Z+2, r24	; 0x02
     fda:	87 e2       	ldi	r24, 0x27	; 39
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	95 83       	std	Z+5, r25	; 0x05
     fe0:	84 83       	std	Z+4, r24	; 0x04
     fe2:	6e 50       	subi	r22, 0x0E	; 14
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	01 c0       	rjmp	.+2      	; 0xfea <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     fe8:	88 0f       	add	r24, r24
     fea:	6a 95       	dec	r22
     fec:	ea f7       	brpl	.-6      	; 0xfe8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     fee:	86 83       	std	Z+6, r24	; 0x06
     ff0:	08 95       	ret

00000ff2 <_ZN16PololuQTRSensors4initEhhh>:
     ff2:	a7 e0       	ldi	r26, 0x07	; 7
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	ef ef       	ldi	r30, 0xFF	; 255
     ff8:	f7 e0       	ldi	r31, 0x07	; 7
     ffa:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__prologue_saves__+0x1c>
     ffe:	8c 01       	movw	r16, r24
    1000:	fc 01       	movw	r30, r24
    1002:	11 82       	std	Z+1, r1	; 0x01
    1004:	10 82       	st	Z, r1
    1006:	13 82       	std	Z+3, r1	; 0x03
    1008:	12 82       	std	Z+2, r1	; 0x02
    100a:	15 82       	std	Z+5, r1	; 0x05
    100c:	14 82       	std	Z+4, r1	; 0x04
    100e:	17 82       	std	Z+7, r1	; 0x07
    1010:	16 82       	std	Z+6, r1	; 0x06
    1012:	61 31       	cpi	r22, 0x11	; 17
    1014:	18 f0       	brcs	.+6      	; 0x101c <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1016:	80 e1       	ldi	r24, 0x10	; 16
    1018:	80 87       	std	Z+8, r24	; 0x08
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    101c:	fc 01       	movw	r30, r24
    101e:	60 87       	std	Z+8, r22	; 0x08
    1020:	f8 01       	movw	r30, r16
    1022:	20 8b       	std	Z+16, r18	; 0x10
    1024:	64 2f       	mov	r22, r20
    1026:	ce 01       	movw	r24, r28
    1028:	01 96       	adiw	r24, 0x01	; 1
    102a:	0e 94 bc 07 	call	0xf78	; 0xf78 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    102e:	8f 81       	ldd	r24, Y+7	; 0x07
    1030:	f8 01       	movw	r30, r16
    1032:	81 87       	std	Z+9, r24	; 0x09
    1034:	8b 81       	ldd	r24, Y+3	; 0x03
    1036:	9c 81       	ldd	r25, Y+4	; 0x04
    1038:	93 87       	std	Z+11, r25	; 0x0b
    103a:	82 87       	std	Z+10, r24	; 0x0a
    103c:	8d 81       	ldd	r24, Y+5	; 0x05
    103e:	9e 81       	ldd	r25, Y+6	; 0x06
    1040:	95 87       	std	Z+13, r25	; 0x0d
    1042:	84 87       	std	Z+12, r24	; 0x0c
    1044:	27 96       	adiw	r28, 0x07	; 7
    1046:	e4 e0       	ldi	r30, 0x04	; 4
    1048:	0c 94 62 0d 	jmp	0x1ac4	; 0x1ac4 <__epilogue_restores__+0x1c>

0000104c <_ZN16PololuQTRSensors11emittersOffEv>:
    104c:	fc 01       	movw	r30, r24
    104e:	a4 85       	ldd	r26, Z+12	; 0x0c
    1050:	b5 85       	ldd	r27, Z+13	; 0x0d
    1052:	10 97       	sbiw	r26, 0x00	; 0
    1054:	79 f0       	breq	.+30     	; 0x1074 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1056:	8c 91       	ld	r24, X
    1058:	91 85       	ldd	r25, Z+9	; 0x09
    105a:	89 2b       	or	r24, r25
    105c:	8c 93       	st	X, r24
    105e:	a2 85       	ldd	r26, Z+10	; 0x0a
    1060:	b3 85       	ldd	r27, Z+11	; 0x0b
    1062:	9c 91       	ld	r25, X
    1064:	81 85       	ldd	r24, Z+9	; 0x09
    1066:	80 95       	com	r24
    1068:	89 23       	and	r24, r25
    106a:	8c 93       	st	X, r24
    106c:	88 ec       	ldi	r24, 0xC8	; 200
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	0e 94 b4 07 	call	0xf68	; 0xf68 <delay_us>
    1074:	08 95       	ret

00001076 <_ZN16PololuQTRSensors10emittersOnEv>:
    1076:	fc 01       	movw	r30, r24
    1078:	a4 85       	ldd	r26, Z+12	; 0x0c
    107a:	b5 85       	ldd	r27, Z+13	; 0x0d
    107c:	10 97       	sbiw	r26, 0x00	; 0
    107e:	71 f0       	breq	.+28     	; 0x109c <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1080:	8c 91       	ld	r24, X
    1082:	91 85       	ldd	r25, Z+9	; 0x09
    1084:	89 2b       	or	r24, r25
    1086:	8c 93       	st	X, r24
    1088:	a2 85       	ldd	r26, Z+10	; 0x0a
    108a:	b3 85       	ldd	r27, Z+11	; 0x0b
    108c:	8c 91       	ld	r24, X
    108e:	91 85       	ldd	r25, Z+9	; 0x09
    1090:	89 2b       	or	r24, r25
    1092:	8c 93       	st	X, r24
    1094:	88 ec       	ldi	r24, 0xC8	; 200
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 b4 07 	call	0xf68	; 0xf68 <delay_us>
    109c:	08 95       	ret

0000109e <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    109e:	a7 e0       	ldi	r26, 0x07	; 7
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	e5 e5       	ldi	r30, 0x55	; 85
    10a4:	f8 e0       	ldi	r31, 0x08	; 8
    10a6:	0c 94 3b 0d 	jmp	0x1a76	; 0x1a76 <__prologue_saves__+0x6>
    10aa:	7c 01       	movw	r14, r24
    10ac:	4b 01       	movw	r8, r22
    10ae:	64 2f       	mov	r22, r20
    10b0:	39 01       	movw	r6, r18
    10b2:	40 2f       	mov	r20, r16
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	0e 94 f9 07 	call	0xff2	; 0xff2 <_ZN16PololuQTRSensors4initEhhh>
    10ba:	87 01       	movw	r16, r14
    10bc:	0f 5b       	subi	r16, 0xBF	; 191
    10be:	1f 4f       	sbci	r17, 0xFF	; 255
    10c0:	f8 01       	movw	r30, r16
    10c2:	10 82       	st	Z, r1
    10c4:	67 01       	movw	r12, r14
    10c6:	f2 e4       	ldi	r31, 0x42	; 66
    10c8:	cf 0e       	add	r12, r31
    10ca:	d1 1c       	adc	r13, r1
    10cc:	f6 01       	movw	r30, r12
    10ce:	10 82       	st	Z, r1
    10d0:	57 01       	movw	r10, r14
    10d2:	f3 e4       	ldi	r31, 0x43	; 67
    10d4:	af 0e       	add	r10, r31
    10d6:	b1 1c       	adc	r11, r1
    10d8:	f5 01       	movw	r30, r10
    10da:	10 82       	st	Z, r1
    10dc:	f7 01       	movw	r30, r14
    10de:	77 86       	std	Z+15, r7	; 0x0f
    10e0:	66 86       	std	Z+14, r6	; 0x0e
    10e2:	51 2c       	mov	r5, r1
    10e4:	f7 01       	movw	r30, r14
    10e6:	80 85       	ldd	r24, Z+8	; 0x08
    10e8:	58 16       	cp	r5, r24
    10ea:	50 f5       	brcc	.+84     	; 0x1140 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    10ec:	65 2c       	mov	r6, r5
    10ee:	71 2c       	mov	r7, r1
    10f0:	f4 01       	movw	r30, r8
    10f2:	e6 0d       	add	r30, r6
    10f4:	f7 1d       	adc	r31, r7
    10f6:	60 81       	ld	r22, Z
    10f8:	ce 01       	movw	r24, r28
    10fa:	01 96       	adiw	r24, 0x01	; 1
    10fc:	0e 94 bc 07 	call	0xf78	; 0xf78 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1100:	2f 81       	ldd	r18, Y+7	; 0x07
    1102:	f7 01       	movw	r30, r14
    1104:	e6 0d       	add	r30, r6
    1106:	f7 1d       	adc	r31, r7
    1108:	21 8b       	std	Z+17, r18	; 0x11
    110a:	89 81       	ldd	r24, Y+1	; 0x01
    110c:	9a 81       	ldd	r25, Y+2	; 0x02
    110e:	f3 01       	movw	r30, r6
    1110:	ee 0f       	add	r30, r30
    1112:	ff 1f       	adc	r31, r31
    1114:	ee 0d       	add	r30, r14
    1116:	ff 1d       	adc	r31, r15
    1118:	92 a3       	std	Z+34, r25	; 0x22
    111a:	81 a3       	std	Z+33, r24	; 0x21
    111c:	83 32       	cpi	r24, 0x23	; 35
    111e:	91 05       	cpc	r25, r1
    1120:	11 f4       	brne	.+4      	; 0x1126 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1122:	f8 01       	movw	r30, r16
    1124:	08 c0       	rjmp	.+16     	; 0x1136 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1126:	86 32       	cpi	r24, 0x26	; 38
    1128:	91 05       	cpc	r25, r1
    112a:	11 f4       	brne	.+4      	; 0x1130 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    112c:	f6 01       	movw	r30, r12
    112e:	03 c0       	rjmp	.+6      	; 0x1136 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1130:	89 97       	sbiw	r24, 0x29	; 41
    1132:	21 f4       	brne	.+8      	; 0x113c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1134:	f5 01       	movw	r30, r10
    1136:	80 81       	ld	r24, Z
    1138:	82 2b       	or	r24, r18
    113a:	80 83       	st	Z, r24
    113c:	53 94       	inc	r5
    113e:	d2 cf       	rjmp	.-92     	; 0x10e4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1140:	27 96       	adiw	r28, 0x07	; 7
    1142:	ef e0       	ldi	r30, 0x0F	; 15
    1144:	0c 94 57 0d 	jmp	0x1aae	; 0x1aae <__epilogue_restores__+0x6>

00001148 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1148:	a0 e0       	ldi	r26, 0x00	; 0
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	ea ea       	ldi	r30, 0xAA	; 170
    114e:	f8 e0       	ldi	r31, 0x08	; 8
    1150:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__prologue_saves__+0xa>
    1154:	ec 01       	movw	r28, r24
    1156:	5b 01       	movw	r10, r22
    1158:	6c 01       	movw	r12, r24
    115a:	81 e4       	ldi	r24, 0x41	; 65
    115c:	c8 0e       	add	r12, r24
    115e:	d1 1c       	adc	r13, r1
    1160:	f6 01       	movw	r30, r12
    1162:	80 80       	ld	r8, Z
    1164:	7e 01       	movw	r14, r28
    1166:	f2 e4       	ldi	r31, 0x42	; 66
    1168:	ef 0e       	add	r14, r31
    116a:	f1 1c       	adc	r15, r1
    116c:	f7 01       	movw	r30, r14
    116e:	70 80       	ld	r7, Z
    1170:	8e 01       	movw	r16, r28
    1172:	0d 5b       	subi	r16, 0xBD	; 189
    1174:	1f 4f       	sbci	r17, 0xFF	; 255
    1176:	f8 01       	movw	r30, r16
    1178:	90 80       	ld	r9, Z
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	98 85       	ldd	r25, Y+8	; 0x08
    117e:	89 17       	cp	r24, r25
    1180:	48 f4       	brcc	.+18     	; 0x1194 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1182:	f5 01       	movw	r30, r10
    1184:	e8 0f       	add	r30, r24
    1186:	f1 1d       	adc	r31, r1
    1188:	e8 0f       	add	r30, r24
    118a:	f1 1d       	adc	r31, r1
    118c:	11 82       	std	Z+1, r1	; 0x01
    118e:	10 82       	st	Z, r1
    1190:	8f 5f       	subi	r24, 0xFF	; 255
    1192:	f4 cf       	rjmp	.-24     	; 0x117c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1194:	84 b1       	in	r24, 0x04	; 4
    1196:	f6 01       	movw	r30, r12
    1198:	90 81       	ld	r25, Z
    119a:	89 2b       	or	r24, r25
    119c:	84 b9       	out	0x04, r24	; 4
    119e:	87 b1       	in	r24, 0x07	; 7
    11a0:	f7 01       	movw	r30, r14
    11a2:	90 81       	ld	r25, Z
    11a4:	89 2b       	or	r24, r25
    11a6:	87 b9       	out	0x07, r24	; 7
    11a8:	8a b1       	in	r24, 0x0a	; 10
    11aa:	f8 01       	movw	r30, r16
    11ac:	90 81       	ld	r25, Z
    11ae:	89 2b       	or	r24, r25
    11b0:	8a b9       	out	0x0a, r24	; 10
    11b2:	85 b1       	in	r24, 0x05	; 5
    11b4:	f6 01       	movw	r30, r12
    11b6:	90 81       	ld	r25, Z
    11b8:	89 2b       	or	r24, r25
    11ba:	85 b9       	out	0x05, r24	; 5
    11bc:	88 b1       	in	r24, 0x08	; 8
    11be:	f7 01       	movw	r30, r14
    11c0:	90 81       	ld	r25, Z
    11c2:	89 2b       	or	r24, r25
    11c4:	88 b9       	out	0x08, r24	; 8
    11c6:	8b b1       	in	r24, 0x0b	; 11
    11c8:	f8 01       	movw	r30, r16
    11ca:	90 81       	ld	r25, Z
    11cc:	89 2b       	or	r24, r25
    11ce:	8b b9       	out	0x0b, r24	; 11
    11d0:	8a e0       	ldi	r24, 0x0A	; 10
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	0e 94 b4 07 	call	0xf68	; 0xf68 <delay_us>
    11d8:	94 b1       	in	r25, 0x04	; 4
    11da:	f6 01       	movw	r30, r12
    11dc:	80 81       	ld	r24, Z
    11de:	80 95       	com	r24
    11e0:	89 23       	and	r24, r25
    11e2:	84 b9       	out	0x04, r24	; 4
    11e4:	97 b1       	in	r25, 0x07	; 7
    11e6:	f7 01       	movw	r30, r14
    11e8:	80 81       	ld	r24, Z
    11ea:	80 95       	com	r24
    11ec:	89 23       	and	r24, r25
    11ee:	87 b9       	out	0x07, r24	; 7
    11f0:	9a b1       	in	r25, 0x0a	; 10
    11f2:	f8 01       	movw	r30, r16
    11f4:	80 81       	ld	r24, Z
    11f6:	80 95       	com	r24
    11f8:	89 23       	and	r24, r25
    11fa:	8a b9       	out	0x0a, r24	; 10
    11fc:	95 b1       	in	r25, 0x05	; 5
    11fe:	f6 01       	movw	r30, r12
    1200:	80 81       	ld	r24, Z
    1202:	80 95       	com	r24
    1204:	89 23       	and	r24, r25
    1206:	85 b9       	out	0x05, r24	; 5
    1208:	98 b1       	in	r25, 0x08	; 8
    120a:	f7 01       	movw	r30, r14
    120c:	80 81       	ld	r24, Z
    120e:	80 95       	com	r24
    1210:	89 23       	and	r24, r25
    1212:	88 b9       	out	0x08, r24	; 8
    1214:	9b b1       	in	r25, 0x0b	; 11
    1216:	f8 01       	movw	r30, r16
    1218:	80 81       	ld	r24, Z
    121a:	80 95       	com	r24
    121c:	89 23       	and	r24, r25
    121e:	8b b9       	out	0x0b, r24	; 11
    1220:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1224:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1228:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    122c:	83 60       	ori	r24, 0x03	; 3
    122e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1232:	82 e0       	ldi	r24, 0x02	; 2
    1234:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1238:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    123c:	80 e0       	ldi	r24, 0x00	; 0
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	2e 85       	ldd	r18, Y+14	; 0x0e
    1242:	3f 85       	ldd	r19, Y+15	; 0x0f
    1244:	82 17       	cp	r24, r18
    1246:	93 07       	cpc	r25, r19
    1248:	20 f5       	brcc	.+72     	; 0x1292 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    124a:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    124e:	2c 2d       	mov	r18, r12
    1250:	24 1b       	sub	r18, r20
    1252:	82 0f       	add	r24, r18
    1254:	91 1d       	adc	r25, r1
    1256:	03 b1       	in	r16, 0x03	; 3
    1258:	08 11       	cpse	r16, r8
    125a:	32 c0       	rjmp	.+100    	; 0x12c0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    125c:	f6 b0       	in	r15, 0x06	; 6
    125e:	f7 10       	cpse	r15, r7
    1260:	2f c0       	rjmp	.+94     	; 0x12c0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1262:	29 b1       	in	r18, 0x09	; 9
    1264:	29 11       	cpse	r18, r9
    1266:	2c c0       	rjmp	.+88     	; 0x12c0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1268:	10 c0       	rjmp	.+32     	; 0x128a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    126a:	21 2f       	mov	r18, r17
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	a9 01       	movw	r20, r18
    1270:	44 0f       	add	r20, r20
    1272:	55 1f       	adc	r21, r21
    1274:	f5 01       	movw	r30, r10
    1276:	e4 0f       	add	r30, r20
    1278:	f5 1f       	adc	r31, r21
    127a:	60 81       	ld	r22, Z
    127c:	71 81       	ldd	r23, Z+1	; 0x01
    127e:	67 2b       	or	r22, r23
    1280:	21 f1       	breq	.+72     	; 0x12ca <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1282:	1f 5f       	subi	r17, 0xFF	; 255
    1284:	28 85       	ldd	r18, Y+8	; 0x08
    1286:	12 17       	cp	r17, r18
    1288:	80 f3       	brcs	.-32     	; 0x126a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    128a:	7f 2c       	mov	r7, r15
    128c:	80 2e       	mov	r8, r16
    128e:	4c 2d       	mov	r20, r12
    1290:	d7 cf       	rjmp	.-82     	; 0x1240 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1292:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1296:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	88 85       	ldd	r24, Y+8	; 0x08
    129e:	28 17       	cp	r18, r24
    12a0:	30 f5       	brcc	.+76     	; 0x12ee <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    12a2:	f5 01       	movw	r30, r10
    12a4:	e2 0f       	add	r30, r18
    12a6:	f1 1d       	adc	r31, r1
    12a8:	e2 0f       	add	r30, r18
    12aa:	f1 1d       	adc	r31, r1
    12ac:	80 81       	ld	r24, Z
    12ae:	91 81       	ldd	r25, Z+1	; 0x01
    12b0:	89 2b       	or	r24, r25
    12b2:	21 f4       	brne	.+8      	; 0x12bc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    12b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    12b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    12b8:	91 83       	std	Z+1, r25	; 0x01
    12ba:	80 83       	st	Z, r24
    12bc:	2f 5f       	subi	r18, 0xFF	; 255
    12be:	ee cf       	rjmp	.-36     	; 0x129c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    12c0:	03 b1       	in	r16, 0x03	; 3
    12c2:	f6 b0       	in	r15, 0x06	; 6
    12c4:	99 b0       	in	r9, 0x09	; 9
    12c6:	10 e0       	ldi	r17, 0x00	; 0
    12c8:	dd cf       	rjmp	.-70     	; 0x1284 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    12ca:	de 01       	movw	r26, r28
    12cc:	a4 0f       	add	r26, r20
    12ce:	b5 1f       	adc	r27, r21
    12d0:	91 96       	adiw	r26, 0x21	; 33
    12d2:	0d 90       	ld	r0, X+
    12d4:	bc 91       	ld	r27, X
    12d6:	a0 2d       	mov	r26, r0
    12d8:	4c 91       	ld	r20, X
    12da:	de 01       	movw	r26, r28
    12dc:	a2 0f       	add	r26, r18
    12de:	b3 1f       	adc	r27, r19
    12e0:	51 96       	adiw	r26, 0x11	; 17
    12e2:	2c 91       	ld	r18, X
    12e4:	42 23       	and	r20, r18
    12e6:	69 f6       	brne	.-102    	; 0x1282 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	80 83       	st	Z, r24
    12ec:	ca cf       	rjmp	.-108    	; 0x1282 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12ee:	cd b7       	in	r28, 0x3d	; 61
    12f0:	de b7       	in	r29, 0x3e	; 62
    12f2:	ed e0       	ldi	r30, 0x0D	; 13
    12f4:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__epilogue_restores__+0xa>

000012f8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    12f8:	ef 92       	push	r14
    12fa:	ff 92       	push	r15
    12fc:	0f 93       	push	r16
    12fe:	1f 93       	push	r17
    1300:	cf 93       	push	r28
    1302:	df 93       	push	r29
    1304:	fc 01       	movw	r30, r24
    1306:	9b 01       	movw	r18, r22
    1308:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    130c:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1310:	47 b1       	in	r20, 0x07	; 7
    1312:	18 b1       	in	r17, 0x08	; 8
    1314:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1318:	86 fd       	sbrc	r24, 6
    131a:	fc cf       	rjmp	.-8      	; 0x1314 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    131c:	80 e0       	ldi	r24, 0x00	; 0
    131e:	90 85       	ldd	r25, Z+8	; 0x08
    1320:	89 17       	cp	r24, r25
    1322:	48 f4       	brcc	.+18     	; 0x1336 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1324:	d9 01       	movw	r26, r18
    1326:	a8 0f       	add	r26, r24
    1328:	b1 1d       	adc	r27, r1
    132a:	a8 0f       	add	r26, r24
    132c:	b1 1d       	adc	r27, r1
    132e:	1d 92       	st	X+, r1
    1330:	1c 92       	st	X, r1
    1332:	8f 5f       	subi	r24, 0xFF	; 255
    1334:	f4 cf       	rjmp	.-24     	; 0x131e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1336:	97 b1       	in	r25, 0x07	; 7
    1338:	82 a1       	ldd	r24, Z+34	; 0x22
    133a:	80 95       	com	r24
    133c:	89 23       	and	r24, r25
    133e:	87 b9       	out	0x07, r24	; 7
    1340:	98 b1       	in	r25, 0x08	; 8
    1342:	82 a1       	ldd	r24, Z+34	; 0x22
    1344:	80 95       	com	r24
    1346:	89 23       	and	r24, r25
    1348:	88 b9       	out	0x08, r24	; 8
    134a:	87 e8       	ldi	r24, 0x87	; 135
    134c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1350:	e1 2c       	mov	r14, r1
    1352:	81 a1       	ldd	r24, Z+33	; 0x21
    1354:	e8 16       	cp	r14, r24
    1356:	10 f0       	brcs	.+4      	; 0x135c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1358:	e1 2c       	mov	r14, r1
    135a:	29 c0       	rjmp	.+82     	; 0x13ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    135c:	50 e0       	ldi	r21, 0x00	; 0
    135e:	80 85       	ldd	r24, Z+8	; 0x08
    1360:	58 17       	cp	r21, r24
    1362:	18 f5       	brcc	.+70     	; 0x13aa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1364:	a5 2f       	mov	r26, r21
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	ef 01       	movw	r28, r30
    136a:	ca 0f       	add	r28, r26
    136c:	db 1f       	adc	r29, r27
    136e:	89 89       	ldd	r24, Y+17	; 0x11
    1370:	80 64       	ori	r24, 0x40	; 64
    1372:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1376:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    137a:	80 64       	ori	r24, 0x40	; 64
    137c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1380:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1384:	86 fd       	sbrc	r24, 6
    1386:	fc cf       	rjmp	.-8      	; 0x1380 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1388:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    138c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1390:	aa 0f       	add	r26, r26
    1392:	bb 1f       	adc	r27, r27
    1394:	a2 0f       	add	r26, r18
    1396:	b3 1f       	adc	r27, r19
    1398:	8d 91       	ld	r24, X+
    139a:	9c 91       	ld	r25, X
    139c:	11 97       	sbiw	r26, 0x01	; 1
    139e:	86 0f       	add	r24, r22
    13a0:	97 1f       	adc	r25, r23
    13a2:	8d 93       	st	X+, r24
    13a4:	9c 93       	st	X, r25
    13a6:	5f 5f       	subi	r21, 0xFF	; 255
    13a8:	da cf       	rjmp	.-76     	; 0x135e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    13aa:	e3 94       	inc	r14
    13ac:	d2 cf       	rjmp	.-92     	; 0x1352 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    13ae:	80 85       	ldd	r24, Z+8	; 0x08
    13b0:	e8 16       	cp	r14, r24
    13b2:	a0 f4       	brcc	.+40     	; 0x13dc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    13b4:	e9 01       	movw	r28, r18
    13b6:	ce 0d       	add	r28, r14
    13b8:	d1 1d       	adc	r29, r1
    13ba:	ce 0d       	add	r28, r14
    13bc:	d1 1d       	adc	r29, r1
    13be:	61 a1       	ldd	r22, Z+33	; 0x21
    13c0:	70 e0       	ldi	r23, 0x00	; 0
    13c2:	cb 01       	movw	r24, r22
    13c4:	95 95       	asr	r25
    13c6:	87 95       	ror	r24
    13c8:	a8 81       	ld	r26, Y
    13ca:	b9 81       	ldd	r27, Y+1	; 0x01
    13cc:	8a 0f       	add	r24, r26
    13ce:	9b 1f       	adc	r25, r27
    13d0:	0e 94 bb 0c 	call	0x1976	; 0x1976 <__udivmodhi4>
    13d4:	79 83       	std	Y+1, r23	; 0x01
    13d6:	68 83       	st	Y, r22
    13d8:	e3 94       	inc	r14
    13da:	e9 cf       	rjmp	.-46     	; 0x13ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    13dc:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    13e0:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    13e4:	18 b9       	out	0x08, r17	; 8
    13e6:	47 b9       	out	0x07, r20	; 7
    13e8:	cd b7       	in	r28, 0x3d	; 61
    13ea:	de b7       	in	r29, 0x3e	; 62
    13ec:	e6 e0       	ldi	r30, 0x06	; 6
    13ee:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__epilogue_restores__+0x18>

000013f2 <_ZN16PololuQTRSensors4readEPjh>:
    13f2:	a0 e2       	ldi	r26, 0x20	; 32
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	ef ef       	ldi	r30, 0xFF	; 255
    13f8:	f9 e0       	ldi	r31, 0x09	; 9
    13fa:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__prologue_saves__+0x16>
    13fe:	8c 01       	movw	r16, r24
    1400:	7b 01       	movw	r14, r22
    1402:	d4 2e       	mov	r13, r20
    1404:	8f ef       	ldi	r24, 0xFF	; 255
    1406:	84 0f       	add	r24, r20
    1408:	82 30       	cpi	r24, 0x02	; 2
    140a:	18 f4       	brcc	.+6      	; 0x1412 <_ZN16PololuQTRSensors4readEPjh+0x20>
    140c:	c8 01       	movw	r24, r16
    140e:	0e 94 3b 08 	call	0x1076	; 0x1076 <_ZN16PololuQTRSensors10emittersOnEv>
    1412:	d8 01       	movw	r26, r16
    1414:	50 96       	adiw	r26, 0x10	; 16
    1416:	8c 91       	ld	r24, X
    1418:	b7 01       	movw	r22, r14
    141a:	81 11       	cpse	r24, r1
    141c:	10 c0       	rjmp	.+32     	; 0x143e <_ZN16PololuQTRSensors4readEPjh+0x4c>
    141e:	c8 01       	movw	r24, r16
    1420:	0e 94 a4 08 	call	0x1148	; 0x1148 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1424:	c8 01       	movw	r24, r16
    1426:	0e 94 26 08 	call	0x104c	; 0x104c <_ZN16PololuQTRSensors11emittersOffEv>
    142a:	b2 e0       	ldi	r27, 0x02	; 2
    142c:	db 12       	cpse	r13, r27
    142e:	3a c0       	rjmp	.+116    	; 0x14a4 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1430:	be 01       	movw	r22, r28
    1432:	6f 5f       	subi	r22, 0xFF	; 255
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	c8 01       	movw	r24, r16
    1438:	0e 94 a4 08 	call	0x1148	; 0x1148 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    143c:	0f c0       	rjmp	.+30     	; 0x145c <_ZN16PololuQTRSensors4readEPjh+0x6a>
    143e:	c8 01       	movw	r24, r16
    1440:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1444:	c8 01       	movw	r24, r16
    1446:	0e 94 26 08 	call	0x104c	; 0x104c <_ZN16PololuQTRSensors11emittersOffEv>
    144a:	e2 e0       	ldi	r30, 0x02	; 2
    144c:	de 12       	cpse	r13, r30
    144e:	2a c0       	rjmp	.+84     	; 0x14a4 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1450:	be 01       	movw	r22, r28
    1452:	6f 5f       	subi	r22, 0xFF	; 255
    1454:	7f 4f       	sbci	r23, 0xFF	; 255
    1456:	c8 01       	movw	r24, r16
    1458:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    145c:	40 e0       	ldi	r20, 0x00	; 0
    145e:	f8 01       	movw	r30, r16
    1460:	80 85       	ldd	r24, Z+8	; 0x08
    1462:	48 17       	cp	r20, r24
    1464:	f8 f4       	brcc	.+62     	; 0x14a4 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1466:	84 2f       	mov	r24, r20
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	88 0f       	add	r24, r24
    146c:	99 1f       	adc	r25, r25
    146e:	f7 01       	movw	r30, r14
    1470:	e8 0f       	add	r30, r24
    1472:	f9 1f       	adc	r31, r25
    1474:	21 e0       	ldi	r18, 0x01	; 1
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	2c 0f       	add	r18, r28
    147a:	3d 1f       	adc	r19, r29
    147c:	82 0f       	add	r24, r18
    147e:	93 1f       	adc	r25, r19
    1480:	d8 01       	movw	r26, r16
    1482:	1e 96       	adiw	r26, 0x0e	; 14
    1484:	2d 91       	ld	r18, X+
    1486:	3c 91       	ld	r19, X
    1488:	1f 97       	sbiw	r26, 0x0f	; 15
    148a:	dc 01       	movw	r26, r24
    148c:	8d 91       	ld	r24, X+
    148e:	9c 91       	ld	r25, X
    1490:	28 1b       	sub	r18, r24
    1492:	39 0b       	sbc	r19, r25
    1494:	80 81       	ld	r24, Z
    1496:	91 81       	ldd	r25, Z+1	; 0x01
    1498:	82 0f       	add	r24, r18
    149a:	93 1f       	adc	r25, r19
    149c:	91 83       	std	Z+1, r25	; 0x01
    149e:	80 83       	st	Z, r24
    14a0:	4f 5f       	subi	r20, 0xFF	; 255
    14a2:	dd cf       	rjmp	.-70     	; 0x145e <_ZN16PololuQTRSensors4readEPjh+0x6c>
    14a4:	a0 96       	adiw	r28, 0x20	; 32
    14a6:	e7 e0       	ldi	r30, 0x07	; 7
    14a8:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__epilogue_restores__+0x16>

000014ac <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	5f 92       	push	r5
    14b2:	6f 92       	push	r6
    14b4:	7f 92       	push	r7
    14b6:	8f 92       	push	r8
    14b8:	9f 92       	push	r9
    14ba:	af 92       	push	r10
    14bc:	bf 92       	push	r11
    14be:	cf 92       	push	r12
    14c0:	df 92       	push	r13
    14c2:	ef 92       	push	r14
    14c4:	ff 92       	push	r15
    14c6:	0f 93       	push	r16
    14c8:	1f 93       	push	r17
    14ca:	cf 93       	push	r28
    14cc:	df 93       	push	r29
    14ce:	cd b7       	in	r28, 0x3d	; 61
    14d0:	de b7       	in	r29, 0x3e	; 62
    14d2:	c0 56       	subi	r28, 0x60	; 96
    14d4:	d1 09       	sbc	r29, r1
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	f8 94       	cli
    14da:	de bf       	out	0x3e, r29	; 62
    14dc:	0f be       	out	0x3f, r0	; 63
    14de:	cd bf       	out	0x3d, r28	; 61
    14e0:	8c 01       	movw	r16, r24
    14e2:	4b 01       	movw	r8, r22
    14e4:	5a 01       	movw	r10, r20
    14e6:	52 2e       	mov	r5, r18
    14e8:	da 01       	movw	r26, r20
    14ea:	8d 91       	ld	r24, X+
    14ec:	9c 91       	ld	r25, X
    14ee:	89 2b       	or	r24, r25
    14f0:	31 f0       	breq	.+12     	; 0x14fe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    14f2:	f4 01       	movw	r30, r8
    14f4:	80 81       	ld	r24, Z
    14f6:	91 81       	ldd	r25, Z+1	; 0x01
    14f8:	89 2b       	or	r24, r25
    14fa:	f1 f4       	brne	.+60     	; 0x1538 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    14fc:	24 c0       	rjmp	.+72     	; 0x1546 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    14fe:	d8 01       	movw	r26, r16
    1500:	18 96       	adiw	r26, 0x08	; 8
    1502:	8c 91       	ld	r24, X
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	88 0f       	add	r24, r24
    1508:	99 1f       	adc	r25, r25
    150a:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <malloc>
    150e:	f5 01       	movw	r30, r10
    1510:	91 83       	std	Z+1, r25	; 0x01
    1512:	80 83       	st	Z, r24
    1514:	00 97       	sbiw	r24, 0x00	; 0
    1516:	09 f4       	brne	.+2      	; 0x151a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1518:	b1 c0       	rjmp	.+354    	; 0x167c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    151a:	fc 01       	movw	r30, r24
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	d8 01       	movw	r26, r16
    1522:	18 96       	adiw	r26, 0x08	; 8
    1524:	8c 91       	ld	r24, X
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	28 17       	cp	r18, r24
    152a:	39 07       	cpc	r19, r25
    152c:	14 f7       	brge	.-60     	; 0x14f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    152e:	11 92       	st	Z+, r1
    1530:	11 92       	st	Z+, r1
    1532:	2f 5f       	subi	r18, 0xFF	; 255
    1534:	3f 4f       	sbci	r19, 0xFF	; 255
    1536:	f4 cf       	rjmp	.-24     	; 0x1520 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1538:	e1 2c       	mov	r14, r1
    153a:	f1 2c       	mov	r15, r1
    153c:	6e 01       	movw	r12, r28
    153e:	b1 e2       	ldi	r27, 0x21	; 33
    1540:	cb 0e       	add	r12, r27
    1542:	d1 1c       	adc	r13, r1
    1544:	21 c0       	rjmp	.+66     	; 0x1588 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1546:	f8 01       	movw	r30, r16
    1548:	80 85       	ldd	r24, Z+8	; 0x08
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	88 0f       	add	r24, r24
    154e:	99 1f       	adc	r25, r25
    1550:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <malloc>
    1554:	d4 01       	movw	r26, r8
    1556:	8d 93       	st	X+, r24
    1558:	9c 93       	st	X, r25
    155a:	00 97       	sbiw	r24, 0x00	; 0
    155c:	09 f4       	brne	.+2      	; 0x1560 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    155e:	8e c0       	rjmp	.+284    	; 0x167c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1560:	fc 01       	movw	r30, r24
    1562:	20 e0       	ldi	r18, 0x00	; 0
    1564:	30 e0       	ldi	r19, 0x00	; 0
    1566:	d8 01       	movw	r26, r16
    1568:	18 96       	adiw	r26, 0x08	; 8
    156a:	8c 91       	ld	r24, X
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	28 17       	cp	r18, r24
    1570:	39 07       	cpc	r19, r25
    1572:	14 f7       	brge	.-60     	; 0x1538 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1574:	d8 01       	movw	r26, r16
    1576:	1e 96       	adiw	r26, 0x0e	; 14
    1578:	8d 91       	ld	r24, X+
    157a:	9c 91       	ld	r25, X
    157c:	1f 97       	sbiw	r26, 0x0f	; 15
    157e:	81 93       	st	Z+, r24
    1580:	91 93       	st	Z+, r25
    1582:	2f 5f       	subi	r18, 0xFF	; 255
    1584:	3f 4f       	sbci	r19, 0xFF	; 255
    1586:	ef cf       	rjmp	.-34     	; 0x1566 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1588:	45 2d       	mov	r20, r5
    158a:	be 01       	movw	r22, r28
    158c:	6f 5b       	subi	r22, 0xBF	; 191
    158e:	7f 4f       	sbci	r23, 0xFF	; 255
    1590:	c8 01       	movw	r24, r16
    1592:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <_ZN16PololuQTRSensors4readEPjh>
    1596:	f8 01       	movw	r30, r16
    1598:	60 84       	ldd	r6, Z+8	; 0x08
    159a:	71 2c       	mov	r7, r1
    159c:	fe 01       	movw	r30, r28
    159e:	ef 5b       	subi	r30, 0xBF	; 191
    15a0:	ff 4f       	sbci	r31, 0xFF	; 255
    15a2:	c6 01       	movw	r24, r12
    15a4:	9e 01       	movw	r18, r28
    15a6:	2f 5f       	subi	r18, 0xFF	; 255
    15a8:	3f 4f       	sbci	r19, 0xFF	; 255
    15aa:	19 01       	movw	r2, r18
    15ac:	20 e0       	ldi	r18, 0x00	; 0
    15ae:	30 e0       	ldi	r19, 0x00	; 0
    15b0:	26 15       	cp	r18, r6
    15b2:	37 05       	cpc	r19, r7
    15b4:	4c f5       	brge	.+82     	; 0x1608 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    15b6:	e1 14       	cp	r14, r1
    15b8:	f1 04       	cpc	r15, r1
    15ba:	89 f0       	breq	.+34     	; 0x15de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15bc:	dc 01       	movw	r26, r24
    15be:	6d 91       	ld	r22, X+
    15c0:	7c 91       	ld	r23, X
    15c2:	40 81       	ld	r20, Z
    15c4:	51 81       	ldd	r21, Z+1	; 0x01
    15c6:	64 17       	cp	r22, r20
    15c8:	75 07       	cpc	r23, r21
    15ca:	48 f0       	brcs	.+18     	; 0x15de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15cc:	d1 01       	movw	r26, r2
    15ce:	6d 91       	ld	r22, X+
    15d0:	7c 91       	ld	r23, X
    15d2:	40 81       	ld	r20, Z
    15d4:	51 81       	ldd	r21, Z+1	; 0x01
    15d6:	46 17       	cp	r20, r22
    15d8:	57 07       	cpc	r21, r23
    15da:	48 f0       	brcs	.+18     	; 0x15ee <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    15dc:	0d c0       	rjmp	.+26     	; 0x15f8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    15de:	40 81       	ld	r20, Z
    15e0:	51 81       	ldd	r21, Z+1	; 0x01
    15e2:	dc 01       	movw	r26, r24
    15e4:	4d 93       	st	X+, r20
    15e6:	5c 93       	st	X, r21
    15e8:	e1 14       	cp	r14, r1
    15ea:	f1 04       	cpc	r15, r1
    15ec:	79 f7       	brne	.-34     	; 0x15cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    15ee:	40 81       	ld	r20, Z
    15f0:	51 81       	ldd	r21, Z+1	; 0x01
    15f2:	d1 01       	movw	r26, r2
    15f4:	4d 93       	st	X+, r20
    15f6:	5c 93       	st	X, r21
    15f8:	2f 5f       	subi	r18, 0xFF	; 255
    15fa:	3f 4f       	sbci	r19, 0xFF	; 255
    15fc:	b2 e0       	ldi	r27, 0x02	; 2
    15fe:	2b 0e       	add	r2, r27
    1600:	31 1c       	adc	r3, r1
    1602:	32 96       	adiw	r30, 0x02	; 2
    1604:	02 96       	adiw	r24, 0x02	; 2
    1606:	d4 cf       	rjmp	.-88     	; 0x15b0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1608:	ef ef       	ldi	r30, 0xFF	; 255
    160a:	ee 1a       	sub	r14, r30
    160c:	fe 0a       	sbc	r15, r30
    160e:	fa e0       	ldi	r31, 0x0A	; 10
    1610:	ef 16       	cp	r14, r31
    1612:	f1 04       	cpc	r15, r1
    1614:	09 f0       	breq	.+2      	; 0x1618 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1616:	b8 cf       	rjmp	.-144    	; 0x1588 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1618:	9e 01       	movw	r18, r28
    161a:	2f 5f       	subi	r18, 0xFF	; 255
    161c:	3f 4f       	sbci	r19, 0xFF	; 255
    161e:	79 01       	movw	r14, r18
    1620:	36 01       	movw	r6, r12
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	f8 01       	movw	r30, r16
    1628:	20 85       	ldd	r18, Z+8	; 0x08
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	82 17       	cp	r24, r18
    162e:	93 07       	cpc	r25, r19
    1630:	2c f5       	brge	.+74     	; 0x167c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1632:	d7 01       	movw	r26, r14
    1634:	2d 91       	ld	r18, X+
    1636:	3d 91       	ld	r19, X+
    1638:	7d 01       	movw	r14, r26
    163a:	b3 01       	movw	r22, r6
    163c:	6c 19       	sub	r22, r12
    163e:	7d 09       	sbc	r23, r13
    1640:	d5 01       	movw	r26, r10
    1642:	ed 91       	ld	r30, X+
    1644:	fc 91       	ld	r31, X
    1646:	e6 0f       	add	r30, r22
    1648:	f7 1f       	adc	r31, r23
    164a:	40 81       	ld	r20, Z
    164c:	51 81       	ldd	r21, Z+1	; 0x01
    164e:	42 17       	cp	r20, r18
    1650:	53 07       	cpc	r21, r19
    1652:	10 f4       	brcc	.+4      	; 0x1658 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1654:	31 83       	std	Z+1, r19	; 0x01
    1656:	20 83       	st	Z, r18
    1658:	f3 01       	movw	r30, r6
    165a:	21 91       	ld	r18, Z+
    165c:	31 91       	ld	r19, Z+
    165e:	3f 01       	movw	r6, r30
    1660:	d4 01       	movw	r26, r8
    1662:	ed 91       	ld	r30, X+
    1664:	fc 91       	ld	r31, X
    1666:	e6 0f       	add	r30, r22
    1668:	f7 1f       	adc	r31, r23
    166a:	40 81       	ld	r20, Z
    166c:	51 81       	ldd	r21, Z+1	; 0x01
    166e:	24 17       	cp	r18, r20
    1670:	35 07       	cpc	r19, r21
    1672:	10 f4       	brcc	.+4      	; 0x1678 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1674:	31 83       	std	Z+1, r19	; 0x01
    1676:	20 83       	st	Z, r18
    1678:	01 96       	adiw	r24, 0x01	; 1
    167a:	d5 cf       	rjmp	.-86     	; 0x1626 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    167c:	c0 5a       	subi	r28, 0xA0	; 160
    167e:	df 4f       	sbci	r29, 0xFF	; 255
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	f8 94       	cli
    1684:	de bf       	out	0x3e, r29	; 62
    1686:	0f be       	out	0x3f, r0	; 63
    1688:	cd bf       	out	0x3d, r28	; 61
    168a:	df 91       	pop	r29
    168c:	cf 91       	pop	r28
    168e:	1f 91       	pop	r17
    1690:	0f 91       	pop	r16
    1692:	ff 90       	pop	r15
    1694:	ef 90       	pop	r14
    1696:	df 90       	pop	r13
    1698:	cf 90       	pop	r12
    169a:	bf 90       	pop	r11
    169c:	af 90       	pop	r10
    169e:	9f 90       	pop	r9
    16a0:	8f 90       	pop	r8
    16a2:	7f 90       	pop	r7
    16a4:	6f 90       	pop	r6
    16a6:	5f 90       	pop	r5
    16a8:	3f 90       	pop	r3
    16aa:	2f 90       	pop	r2
    16ac:	08 95       	ret

000016ae <_ZN16PololuQTRSensors9calibrateEh>:
    16ae:	1f 93       	push	r17
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	ec 01       	movw	r28, r24
    16b6:	16 2f       	mov	r17, r22
    16b8:	8f ef       	ldi	r24, 0xFF	; 255
    16ba:	86 0f       	add	r24, r22
    16bc:	82 30       	cpi	r24, 0x02	; 2
    16be:	18 f0       	brcs	.+6      	; 0x16c6 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    16c0:	66 23       	and	r22, r22
    16c2:	59 f0       	breq	.+22     	; 0x16da <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    16c4:	14 c0       	rjmp	.+40     	; 0x16ee <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16c6:	21 e0       	ldi	r18, 0x01	; 1
    16c8:	ae 01       	movw	r20, r28
    16ca:	4e 5f       	subi	r20, 0xFE	; 254
    16cc:	5f 4f       	sbci	r21, 0xFF	; 255
    16ce:	be 01       	movw	r22, r28
    16d0:	ce 01       	movw	r24, r28
    16d2:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16d6:	12 30       	cpi	r17, 0x02	; 2
    16d8:	51 f4       	brne	.+20     	; 0x16ee <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16da:	ae 01       	movw	r20, r28
    16dc:	4a 5f       	subi	r20, 0xFA	; 250
    16de:	5f 4f       	sbci	r21, 0xFF	; 255
    16e0:	be 01       	movw	r22, r28
    16e2:	6c 5f       	subi	r22, 0xFC	; 252
    16e4:	7f 4f       	sbci	r23, 0xFF	; 255
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	ce 01       	movw	r24, r28
    16ea:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16ee:	df 91       	pop	r29
    16f0:	cf 91       	pop	r28
    16f2:	1f 91       	pop	r17
    16f4:	08 95       	ret

000016f6 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    16f6:	a0 e0       	ldi	r26, 0x00	; 0
    16f8:	b0 e0       	ldi	r27, 0x00	; 0
    16fa:	e1 e8       	ldi	r30, 0x81	; 129
    16fc:	fb e0       	ldi	r31, 0x0B	; 11
    16fe:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__prologue_saves__+0x12>
    1702:	ec 01       	movw	r28, r24
    1704:	8b 01       	movw	r16, r22
    1706:	b4 2e       	mov	r11, r20
    1708:	84 2f       	mov	r24, r20
    170a:	8d 7f       	andi	r24, 0xFD	; 253
    170c:	51 f4       	brne	.+20     	; 0x1722 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    170e:	8c 81       	ldd	r24, Y+4	; 0x04
    1710:	9d 81       	ldd	r25, Y+5	; 0x05
    1712:	89 2b       	or	r24, r25
    1714:	09 f4       	brne	.+2      	; 0x1718 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1716:	97 c0       	rjmp	.+302    	; 0x1846 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1718:	8e 81       	ldd	r24, Y+6	; 0x06
    171a:	9f 81       	ldd	r25, Y+7	; 0x07
    171c:	89 2b       	or	r24, r25
    171e:	09 f4       	brne	.+2      	; 0x1722 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1720:	92 c0       	rjmp	.+292    	; 0x1846 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1722:	8f ef       	ldi	r24, 0xFF	; 255
    1724:	8b 0d       	add	r24, r11
    1726:	82 30       	cpi	r24, 0x02	; 2
    1728:	50 f4       	brcc	.+20     	; 0x173e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    172a:	88 81       	ld	r24, Y
    172c:	99 81       	ldd	r25, Y+1	; 0x01
    172e:	89 2b       	or	r24, r25
    1730:	09 f4       	brne	.+2      	; 0x1734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1732:	89 c0       	rjmp	.+274    	; 0x1846 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1734:	8a 81       	ldd	r24, Y+2	; 0x02
    1736:	9b 81       	ldd	r25, Y+3	; 0x03
    1738:	89 2b       	or	r24, r25
    173a:	09 f4       	brne	.+2      	; 0x173e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    173c:	84 c0       	rjmp	.+264    	; 0x1846 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    173e:	4b 2d       	mov	r20, r11
    1740:	b8 01       	movw	r22, r16
    1742:	ce 01       	movw	r24, r28
    1744:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <_ZN16PololuQTRSensors4readEPjh>
    1748:	78 01       	movw	r14, r16
    174a:	00 e0       	ldi	r16, 0x00	; 0
    174c:	10 e0       	ldi	r17, 0x00	; 0
    174e:	c1 2c       	mov	r12, r1
    1750:	d1 2c       	mov	r13, r1
    1752:	88 85       	ldd	r24, Y+8	; 0x08
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	c8 16       	cp	r12, r24
    1758:	d9 06       	cpc	r13, r25
    175a:	0c f0       	brlt	.+2      	; 0x175e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    175c:	74 c0       	rjmp	.+232    	; 0x1846 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    175e:	81 e0       	ldi	r24, 0x01	; 1
    1760:	b8 12       	cpse	r11, r24
    1762:	0a c0       	rjmp	.+20     	; 0x1778 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1764:	ea 81       	ldd	r30, Y+2	; 0x02
    1766:	fb 81       	ldd	r31, Y+3	; 0x03
    1768:	e0 0f       	add	r30, r16
    176a:	f1 1f       	adc	r31, r17
    176c:	01 90       	ld	r0, Z+
    176e:	f0 81       	ld	r31, Z
    1770:	e0 2d       	mov	r30, r0
    1772:	a8 81       	ld	r26, Y
    1774:	b9 81       	ldd	r27, Y+1	; 0x01
    1776:	0d c0       	rjmp	.+26     	; 0x1792 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1778:	8c 81       	ldd	r24, Y+4	; 0x04
    177a:	9d 81       	ldd	r25, Y+5	; 0x05
    177c:	2e 81       	ldd	r18, Y+6	; 0x06
    177e:	3f 81       	ldd	r19, Y+7	; 0x07
    1780:	b1 10       	cpse	r11, r1
    1782:	0c c0       	rjmp	.+24     	; 0x179c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1784:	f9 01       	movw	r30, r18
    1786:	e0 0f       	add	r30, r16
    1788:	f1 1f       	adc	r31, r17
    178a:	01 90       	ld	r0, Z+
    178c:	f0 81       	ld	r31, Z
    178e:	e0 2d       	mov	r30, r0
    1790:	dc 01       	movw	r26, r24
    1792:	a0 0f       	add	r26, r16
    1794:	b1 1f       	adc	r27, r17
    1796:	8d 91       	ld	r24, X+
    1798:	9c 91       	ld	r25, X
    179a:	28 c0       	rjmp	.+80     	; 0x17ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    179c:	fc 01       	movw	r30, r24
    179e:	e0 0f       	add	r30, r16
    17a0:	f1 1f       	adc	r31, r17
    17a2:	40 81       	ld	r20, Z
    17a4:	51 81       	ldd	r21, Z+1	; 0x01
    17a6:	e8 81       	ld	r30, Y
    17a8:	f9 81       	ldd	r31, Y+1	; 0x01
    17aa:	e0 0f       	add	r30, r16
    17ac:	f1 1f       	adc	r31, r17
    17ae:	80 81       	ld	r24, Z
    17b0:	91 81       	ldd	r25, Z+1	; 0x01
    17b2:	ee 85       	ldd	r30, Y+14	; 0x0e
    17b4:	ff 85       	ldd	r31, Y+15	; 0x0f
    17b6:	48 17       	cp	r20, r24
    17b8:	59 07       	cpc	r21, r25
    17ba:	10 f4       	brcc	.+4      	; 0x17c0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    17bc:	cf 01       	movw	r24, r30
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    17c0:	8e 0f       	add	r24, r30
    17c2:	9f 1f       	adc	r25, r31
    17c4:	84 1b       	sub	r24, r20
    17c6:	95 0b       	sbc	r25, r21
    17c8:	d9 01       	movw	r26, r18
    17ca:	a0 0f       	add	r26, r16
    17cc:	b1 1f       	adc	r27, r17
    17ce:	2d 91       	ld	r18, X+
    17d0:	3c 91       	ld	r19, X
    17d2:	aa 81       	ldd	r26, Y+2	; 0x02
    17d4:	bb 81       	ldd	r27, Y+3	; 0x03
    17d6:	a0 0f       	add	r26, r16
    17d8:	b1 1f       	adc	r27, r17
    17da:	4d 91       	ld	r20, X+
    17dc:	5c 91       	ld	r21, X
    17de:	24 17       	cp	r18, r20
    17e0:	35 07       	cpc	r19, r21
    17e2:	20 f0       	brcs	.+8      	; 0x17ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    17e4:	e4 0f       	add	r30, r20
    17e6:	f5 1f       	adc	r31, r21
    17e8:	e2 1b       	sub	r30, r18
    17ea:	f3 0b       	sbc	r31, r19
    17ec:	e8 1b       	sub	r30, r24
    17ee:	f9 0b       	sbc	r31, r25
    17f0:	a9 f0       	breq	.+42     	; 0x181c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    17f2:	d7 01       	movw	r26, r14
    17f4:	2d 91       	ld	r18, X+
    17f6:	3c 91       	ld	r19, X
    17f8:	40 e0       	ldi	r20, 0x00	; 0
    17fa:	50 e0       	ldi	r21, 0x00	; 0
    17fc:	28 1b       	sub	r18, r24
    17fe:	39 0b       	sbc	r19, r25
    1800:	41 09       	sbc	r20, r1
    1802:	51 09       	sbc	r21, r1
    1804:	a8 ee       	ldi	r26, 0xE8	; 232
    1806:	b3 e0       	ldi	r27, 0x03	; 3
    1808:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <__muluhisi3>
    180c:	9f 01       	movw	r18, r30
    180e:	40 e0       	ldi	r20, 0x00	; 0
    1810:	50 e0       	ldi	r21, 0x00	; 0
    1812:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__divmodsi4>
    1816:	37 fd       	sbrc	r19, 7
    1818:	0a c0       	rjmp	.+20     	; 0x182e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    181a:	02 c0       	rjmp	.+4      	; 0x1820 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    181c:	20 e0       	ldi	r18, 0x00	; 0
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	29 3e       	cpi	r18, 0xE9	; 233
    1822:	b3 e0       	ldi	r27, 0x03	; 3
    1824:	3b 07       	cpc	r19, r27
    1826:	2c f0       	brlt	.+10     	; 0x1832 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1828:	28 ee       	ldi	r18, 0xE8	; 232
    182a:	33 e0       	ldi	r19, 0x03	; 3
    182c:	02 c0       	rjmp	.+4      	; 0x1832 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	f7 01       	movw	r30, r14
    1834:	21 93       	st	Z+, r18
    1836:	31 93       	st	Z+, r19
    1838:	7f 01       	movw	r14, r30
    183a:	ff ef       	ldi	r31, 0xFF	; 255
    183c:	cf 1a       	sub	r12, r31
    183e:	df 0a       	sbc	r13, r31
    1840:	0e 5f       	subi	r16, 0xFE	; 254
    1842:	1f 4f       	sbci	r17, 0xFF	; 255
    1844:	86 cf       	rjmp	.-244    	; 0x1752 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1846:	cd b7       	in	r28, 0x3d	; 61
    1848:	de b7       	in	r29, 0x3e	; 62
    184a:	e9 e0       	ldi	r30, 0x09	; 9
    184c:	0c 94 5d 0d 	jmp	0x1aba	; 0x1aba <__epilogue_restores__+0x12>

00001850 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1850:	a0 e0       	ldi	r26, 0x00	; 0
    1852:	b0 e0       	ldi	r27, 0x00	; 0
    1854:	ee e2       	ldi	r30, 0x2E	; 46
    1856:	fc e0       	ldi	r31, 0x0C	; 12
    1858:	0c 94 38 0d 	jmp	0x1a70	; 0x1a70 <__prologue_saves__>
    185c:	ec 01       	movw	r28, r24
    185e:	8b 01       	movw	r16, r22
    1860:	82 2e       	mov	r8, r18
    1862:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1866:	28 84       	ldd	r2, Y+8	; 0x08
    1868:	e8 01       	movw	r28, r16
    186a:	41 2c       	mov	r4, r1
    186c:	51 2c       	mov	r5, r1
    186e:	32 01       	movw	r6, r4
    1870:	00 e0       	ldi	r16, 0x00	; 0
    1872:	10 e0       	ldi	r17, 0x00	; 0
    1874:	c1 2c       	mov	r12, r1
    1876:	d1 2c       	mov	r13, r1
    1878:	76 01       	movw	r14, r12
    187a:	31 2c       	mov	r3, r1
    187c:	91 2c       	mov	r9, r1
    187e:	58 ee       	ldi	r21, 0xE8	; 232
    1880:	a5 2e       	mov	r10, r21
    1882:	53 e0       	ldi	r21, 0x03	; 3
    1884:	b5 2e       	mov	r11, r21
    1886:	92 14       	cp	r9, r2
    1888:	21 f1       	breq	.+72     	; 0x18d2 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    188a:	e9 91       	ld	r30, Y+
    188c:	f9 91       	ld	r31, Y+
    188e:	88 20       	and	r8, r8
    1890:	21 f0       	breq	.+8      	; 0x189a <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1892:	c5 01       	movw	r24, r10
    1894:	8e 1b       	sub	r24, r30
    1896:	9f 0b       	sbc	r25, r31
    1898:	fc 01       	movw	r30, r24
    189a:	e9 3c       	cpi	r30, 0xC9	; 201
    189c:	f1 05       	cpc	r31, r1
    189e:	24 f4       	brge	.+8      	; 0x18a8 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    18a0:	e3 33       	cpi	r30, 0x33	; 51
    18a2:	f1 05       	cpc	r31, r1
    18a4:	74 f0       	brlt	.+28     	; 0x18c2 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    18a8:	33 24       	eor	r3, r3
    18aa:	33 94       	inc	r3
    18ac:	df 01       	movw	r26, r30
    18ae:	a3 01       	movw	r20, r6
    18b0:	92 01       	movw	r18, r4
    18b2:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__mulshisi3>
    18b6:	c6 0e       	add	r12, r22
    18b8:	d7 1e       	adc	r13, r23
    18ba:	e8 1e       	adc	r14, r24
    18bc:	f9 1e       	adc	r15, r25
    18be:	0e 0f       	add	r16, r30
    18c0:	1f 1f       	adc	r17, r31
    18c2:	93 94       	inc	r9
    18c4:	98 ee       	ldi	r25, 0xE8	; 232
    18c6:	49 0e       	add	r4, r25
    18c8:	93 e0       	ldi	r25, 0x03	; 3
    18ca:	59 1e       	adc	r5, r25
    18cc:	61 1c       	adc	r6, r1
    18ce:	71 1c       	adc	r7, r1
    18d0:	da cf       	rjmp	.-76     	; 0x1886 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    18d2:	31 10       	cpse	r3, r1
    18d4:	1e c0       	rjmp	.+60     	; 0x1912 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    18d6:	49 2d       	mov	r20, r9
    18d8:	50 e0       	ldi	r21, 0x00	; 0
    18da:	41 50       	subi	r20, 0x01	; 1
    18dc:	51 09       	sbc	r21, r1
    18de:	24 ef       	ldi	r18, 0xF4	; 244
    18e0:	31 e0       	ldi	r19, 0x01	; 1
    18e2:	42 9f       	mul	r20, r18
    18e4:	c0 01       	movw	r24, r0
    18e6:	43 9f       	mul	r20, r19
    18e8:	90 0d       	add	r25, r0
    18ea:	52 9f       	mul	r21, r18
    18ec:	90 0d       	add	r25, r0
    18ee:	11 24       	eor	r1, r1
    18f0:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    18f4:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    18f8:	28 17       	cp	r18, r24
    18fa:	39 07       	cpc	r19, r25
    18fc:	b4 f0       	brlt	.+44     	; 0x192a <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    18fe:	88 ee       	ldi	r24, 0xE8	; 232
    1900:	93 e0       	ldi	r25, 0x03	; 3
    1902:	48 9f       	mul	r20, r24
    1904:	90 01       	movw	r18, r0
    1906:	49 9f       	mul	r20, r25
    1908:	30 0d       	add	r19, r0
    190a:	58 9f       	mul	r21, r24
    190c:	30 0d       	add	r19, r0
    190e:	11 24       	eor	r1, r1
    1910:	0e c0       	rjmp	.+28     	; 0x192e <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1912:	98 01       	movw	r18, r16
    1914:	40 e0       	ldi	r20, 0x00	; 0
    1916:	50 e0       	ldi	r21, 0x00	; 0
    1918:	c7 01       	movw	r24, r14
    191a:	b6 01       	movw	r22, r12
    191c:	0e 94 cf 0c 	call	0x199e	; 0x199e <__udivmodsi4>
    1920:	30 93 8f 01 	sts	0x018F, r19	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1924:	20 93 8e 01 	sts	0x018E, r18	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1928:	02 c0       	rjmp	.+4      	; 0x192e <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	c9 01       	movw	r24, r18
    1930:	cd b7       	in	r28, 0x3d	; 61
    1932:	de b7       	in	r29, 0x3e	; 62
    1934:	e2 e1       	ldi	r30, 0x12	; 18
    1936:	0c 94 54 0d 	jmp	0x1aa8	; 0x1aa8 <__epilogue_restores__>

0000193a <_ZN16PololuQTRSensorsD1Ev>:
    193a:	cf 93       	push	r28
    193c:	df 93       	push	r29
    193e:	ec 01       	movw	r28, r24
    1940:	8a 81       	ldd	r24, Y+2	; 0x02
    1942:	9b 81       	ldd	r25, Y+3	; 0x03
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	11 f0       	breq	.+4      	; 0x194c <_ZN16PololuQTRSensorsD1Ev+0x12>
    1948:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <free>
    194c:	8e 81       	ldd	r24, Y+6	; 0x06
    194e:	9f 81       	ldd	r25, Y+7	; 0x07
    1950:	00 97       	sbiw	r24, 0x00	; 0
    1952:	11 f0       	breq	.+4      	; 0x1958 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1954:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <free>
    1958:	88 81       	ld	r24, Y
    195a:	99 81       	ldd	r25, Y+1	; 0x01
    195c:	00 97       	sbiw	r24, 0x00	; 0
    195e:	11 f0       	breq	.+4      	; 0x1964 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1960:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <free>
    1964:	8c 81       	ldd	r24, Y+4	; 0x04
    1966:	9d 81       	ldd	r25, Y+5	; 0x05
    1968:	00 97       	sbiw	r24, 0x00	; 0
    196a:	11 f0       	breq	.+4      	; 0x1970 <_ZN16PololuQTRSensorsD1Ev+0x36>
    196c:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <free>
    1970:	df 91       	pop	r29
    1972:	cf 91       	pop	r28
    1974:	08 95       	ret

00001976 <__udivmodhi4>:
    1976:	aa 1b       	sub	r26, r26
    1978:	bb 1b       	sub	r27, r27
    197a:	51 e1       	ldi	r21, 0x11	; 17
    197c:	07 c0       	rjmp	.+14     	; 0x198c <__udivmodhi4_ep>

0000197e <__udivmodhi4_loop>:
    197e:	aa 1f       	adc	r26, r26
    1980:	bb 1f       	adc	r27, r27
    1982:	a6 17       	cp	r26, r22
    1984:	b7 07       	cpc	r27, r23
    1986:	10 f0       	brcs	.+4      	; 0x198c <__udivmodhi4_ep>
    1988:	a6 1b       	sub	r26, r22
    198a:	b7 0b       	sbc	r27, r23

0000198c <__udivmodhi4_ep>:
    198c:	88 1f       	adc	r24, r24
    198e:	99 1f       	adc	r25, r25
    1990:	5a 95       	dec	r21
    1992:	a9 f7       	brne	.-22     	; 0x197e <__udivmodhi4_loop>
    1994:	80 95       	com	r24
    1996:	90 95       	com	r25
    1998:	bc 01       	movw	r22, r24
    199a:	cd 01       	movw	r24, r26
    199c:	08 95       	ret

0000199e <__udivmodsi4>:
    199e:	a1 e2       	ldi	r26, 0x21	; 33
    19a0:	1a 2e       	mov	r1, r26
    19a2:	aa 1b       	sub	r26, r26
    19a4:	bb 1b       	sub	r27, r27
    19a6:	fd 01       	movw	r30, r26
    19a8:	0d c0       	rjmp	.+26     	; 0x19c4 <__udivmodsi4_ep>

000019aa <__udivmodsi4_loop>:
    19aa:	aa 1f       	adc	r26, r26
    19ac:	bb 1f       	adc	r27, r27
    19ae:	ee 1f       	adc	r30, r30
    19b0:	ff 1f       	adc	r31, r31
    19b2:	a2 17       	cp	r26, r18
    19b4:	b3 07       	cpc	r27, r19
    19b6:	e4 07       	cpc	r30, r20
    19b8:	f5 07       	cpc	r31, r21
    19ba:	20 f0       	brcs	.+8      	; 0x19c4 <__udivmodsi4_ep>
    19bc:	a2 1b       	sub	r26, r18
    19be:	b3 0b       	sbc	r27, r19
    19c0:	e4 0b       	sbc	r30, r20
    19c2:	f5 0b       	sbc	r31, r21

000019c4 <__udivmodsi4_ep>:
    19c4:	66 1f       	adc	r22, r22
    19c6:	77 1f       	adc	r23, r23
    19c8:	88 1f       	adc	r24, r24
    19ca:	99 1f       	adc	r25, r25
    19cc:	1a 94       	dec	r1
    19ce:	69 f7       	brne	.-38     	; 0x19aa <__udivmodsi4_loop>
    19d0:	60 95       	com	r22
    19d2:	70 95       	com	r23
    19d4:	80 95       	com	r24
    19d6:	90 95       	com	r25
    19d8:	9b 01       	movw	r18, r22
    19da:	ac 01       	movw	r20, r24
    19dc:	bd 01       	movw	r22, r26
    19de:	cf 01       	movw	r24, r30
    19e0:	08 95       	ret

000019e2 <__divmodsi4>:
    19e2:	05 2e       	mov	r0, r21
    19e4:	97 fb       	bst	r25, 7
    19e6:	1e f4       	brtc	.+6      	; 0x19ee <__divmodsi4+0xc>
    19e8:	00 94       	com	r0
    19ea:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__negsi2>
    19ee:	57 fd       	sbrc	r21, 7
    19f0:	07 d0       	rcall	.+14     	; 0x1a00 <__divmodsi4_neg2>
    19f2:	0e 94 cf 0c 	call	0x199e	; 0x199e <__udivmodsi4>
    19f6:	07 fc       	sbrc	r0, 7
    19f8:	03 d0       	rcall	.+6      	; 0x1a00 <__divmodsi4_neg2>
    19fa:	4e f4       	brtc	.+18     	; 0x1a0e <__divmodsi4_exit>
    19fc:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__negsi2>

00001a00 <__divmodsi4_neg2>:
    1a00:	50 95       	com	r21
    1a02:	40 95       	com	r20
    1a04:	30 95       	com	r19
    1a06:	21 95       	neg	r18
    1a08:	3f 4f       	sbci	r19, 0xFF	; 255
    1a0a:	4f 4f       	sbci	r20, 0xFF	; 255
    1a0c:	5f 4f       	sbci	r21, 0xFF	; 255

00001a0e <__divmodsi4_exit>:
    1a0e:	08 95       	ret

00001a10 <__negsi2>:
    1a10:	90 95       	com	r25
    1a12:	80 95       	com	r24
    1a14:	70 95       	com	r23
    1a16:	61 95       	neg	r22
    1a18:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1e:	08 95       	ret

00001a20 <__tablejump2__>:
    1a20:	ee 0f       	add	r30, r30
    1a22:	ff 1f       	adc	r31, r31
    1a24:	05 90       	lpm	r0, Z+
    1a26:	f4 91       	lpm	r31, Z
    1a28:	e0 2d       	mov	r30, r0
    1a2a:	09 94       	ijmp

00001a2c <__umulhisi3>:
    1a2c:	a2 9f       	mul	r26, r18
    1a2e:	b0 01       	movw	r22, r0
    1a30:	b3 9f       	mul	r27, r19
    1a32:	c0 01       	movw	r24, r0
    1a34:	a3 9f       	mul	r26, r19
    1a36:	70 0d       	add	r23, r0
    1a38:	81 1d       	adc	r24, r1
    1a3a:	11 24       	eor	r1, r1
    1a3c:	91 1d       	adc	r25, r1
    1a3e:	b2 9f       	mul	r27, r18
    1a40:	70 0d       	add	r23, r0
    1a42:	81 1d       	adc	r24, r1
    1a44:	11 24       	eor	r1, r1
    1a46:	91 1d       	adc	r25, r1
    1a48:	08 95       	ret

00001a4a <__muluhisi3>:
    1a4a:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__umulhisi3>
    1a4e:	a5 9f       	mul	r26, r21
    1a50:	90 0d       	add	r25, r0
    1a52:	b4 9f       	mul	r27, r20
    1a54:	90 0d       	add	r25, r0
    1a56:	a4 9f       	mul	r26, r20
    1a58:	80 0d       	add	r24, r0
    1a5a:	91 1d       	adc	r25, r1
    1a5c:	11 24       	eor	r1, r1
    1a5e:	08 95       	ret

00001a60 <__mulshisi3>:
    1a60:	b7 ff       	sbrs	r27, 7
    1a62:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__muluhisi3>

00001a66 <__mulohisi3>:
    1a66:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <__muluhisi3>
    1a6a:	82 1b       	sub	r24, r18
    1a6c:	93 0b       	sbc	r25, r19
    1a6e:	08 95       	ret

00001a70 <__prologue_saves__>:
    1a70:	2f 92       	push	r2
    1a72:	3f 92       	push	r3
    1a74:	4f 92       	push	r4
    1a76:	5f 92       	push	r5
    1a78:	6f 92       	push	r6
    1a7a:	7f 92       	push	r7
    1a7c:	8f 92       	push	r8
    1a7e:	9f 92       	push	r9
    1a80:	af 92       	push	r10
    1a82:	bf 92       	push	r11
    1a84:	cf 92       	push	r12
    1a86:	df 92       	push	r13
    1a88:	ef 92       	push	r14
    1a8a:	ff 92       	push	r15
    1a8c:	0f 93       	push	r16
    1a8e:	1f 93       	push	r17
    1a90:	cf 93       	push	r28
    1a92:	df 93       	push	r29
    1a94:	cd b7       	in	r28, 0x3d	; 61
    1a96:	de b7       	in	r29, 0x3e	; 62
    1a98:	ca 1b       	sub	r28, r26
    1a9a:	db 0b       	sbc	r29, r27
    1a9c:	0f b6       	in	r0, 0x3f	; 63
    1a9e:	f8 94       	cli
    1aa0:	de bf       	out	0x3e, r29	; 62
    1aa2:	0f be       	out	0x3f, r0	; 63
    1aa4:	cd bf       	out	0x3d, r28	; 61
    1aa6:	09 94       	ijmp

00001aa8 <__epilogue_restores__>:
    1aa8:	2a 88       	ldd	r2, Y+18	; 0x12
    1aaa:	39 88       	ldd	r3, Y+17	; 0x11
    1aac:	48 88       	ldd	r4, Y+16	; 0x10
    1aae:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ab0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ab2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ab4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ab6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ab8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1aba:	b9 84       	ldd	r11, Y+9	; 0x09
    1abc:	c8 84       	ldd	r12, Y+8	; 0x08
    1abe:	df 80       	ldd	r13, Y+7	; 0x07
    1ac0:	ee 80       	ldd	r14, Y+6	; 0x06
    1ac2:	fd 80       	ldd	r15, Y+5	; 0x05
    1ac4:	0c 81       	ldd	r16, Y+4	; 0x04
    1ac6:	1b 81       	ldd	r17, Y+3	; 0x03
    1ac8:	aa 81       	ldd	r26, Y+2	; 0x02
    1aca:	b9 81       	ldd	r27, Y+1	; 0x01
    1acc:	ce 0f       	add	r28, r30
    1ace:	d1 1d       	adc	r29, r1
    1ad0:	0f b6       	in	r0, 0x3f	; 63
    1ad2:	f8 94       	cli
    1ad4:	de bf       	out	0x3e, r29	; 62
    1ad6:	0f be       	out	0x3f, r0	; 63
    1ad8:	cd bf       	out	0x3d, r28	; 61
    1ada:	ed 01       	movw	r28, r26
    1adc:	08 95       	ret

00001ade <malloc>:
    1ade:	0f 93       	push	r16
    1ae0:	1f 93       	push	r17
    1ae2:	cf 93       	push	r28
    1ae4:	df 93       	push	r29
    1ae6:	82 30       	cpi	r24, 0x02	; 2
    1ae8:	91 05       	cpc	r25, r1
    1aea:	10 f4       	brcc	.+4      	; 0x1af0 <malloc+0x12>
    1aec:	82 e0       	ldi	r24, 0x02	; 2
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__flp>
    1af4:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__flp+0x1>
    1af8:	20 e0       	ldi	r18, 0x00	; 0
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	a0 e0       	ldi	r26, 0x00	; 0
    1afe:	b0 e0       	ldi	r27, 0x00	; 0
    1b00:	30 97       	sbiw	r30, 0x00	; 0
    1b02:	19 f1       	breq	.+70     	; 0x1b4a <malloc+0x6c>
    1b04:	40 81       	ld	r20, Z
    1b06:	51 81       	ldd	r21, Z+1	; 0x01
    1b08:	02 81       	ldd	r16, Z+2	; 0x02
    1b0a:	13 81       	ldd	r17, Z+3	; 0x03
    1b0c:	48 17       	cp	r20, r24
    1b0e:	59 07       	cpc	r21, r25
    1b10:	c8 f0       	brcs	.+50     	; 0x1b44 <malloc+0x66>
    1b12:	84 17       	cp	r24, r20
    1b14:	95 07       	cpc	r25, r21
    1b16:	69 f4       	brne	.+26     	; 0x1b32 <malloc+0x54>
    1b18:	10 97       	sbiw	r26, 0x00	; 0
    1b1a:	31 f0       	breq	.+12     	; 0x1b28 <malloc+0x4a>
    1b1c:	12 96       	adiw	r26, 0x02	; 2
    1b1e:	0c 93       	st	X, r16
    1b20:	12 97       	sbiw	r26, 0x02	; 2
    1b22:	13 96       	adiw	r26, 0x03	; 3
    1b24:	1c 93       	st	X, r17
    1b26:	27 c0       	rjmp	.+78     	; 0x1b76 <malloc+0x98>
    1b28:	00 93 a6 01 	sts	0x01A6, r16	; 0x8001a6 <__flp>
    1b2c:	10 93 a7 01 	sts	0x01A7, r17	; 0x8001a7 <__flp+0x1>
    1b30:	22 c0       	rjmp	.+68     	; 0x1b76 <malloc+0x98>
    1b32:	21 15       	cp	r18, r1
    1b34:	31 05       	cpc	r19, r1
    1b36:	19 f0       	breq	.+6      	; 0x1b3e <malloc+0x60>
    1b38:	42 17       	cp	r20, r18
    1b3a:	53 07       	cpc	r21, r19
    1b3c:	18 f4       	brcc	.+6      	; 0x1b44 <malloc+0x66>
    1b3e:	9a 01       	movw	r18, r20
    1b40:	bd 01       	movw	r22, r26
    1b42:	ef 01       	movw	r28, r30
    1b44:	df 01       	movw	r26, r30
    1b46:	f8 01       	movw	r30, r16
    1b48:	db cf       	rjmp	.-74     	; 0x1b00 <malloc+0x22>
    1b4a:	21 15       	cp	r18, r1
    1b4c:	31 05       	cpc	r19, r1
    1b4e:	f9 f0       	breq	.+62     	; 0x1b8e <malloc+0xb0>
    1b50:	28 1b       	sub	r18, r24
    1b52:	39 0b       	sbc	r19, r25
    1b54:	24 30       	cpi	r18, 0x04	; 4
    1b56:	31 05       	cpc	r19, r1
    1b58:	80 f4       	brcc	.+32     	; 0x1b7a <malloc+0x9c>
    1b5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b5c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b5e:	61 15       	cp	r22, r1
    1b60:	71 05       	cpc	r23, r1
    1b62:	21 f0       	breq	.+8      	; 0x1b6c <malloc+0x8e>
    1b64:	fb 01       	movw	r30, r22
    1b66:	93 83       	std	Z+3, r25	; 0x03
    1b68:	82 83       	std	Z+2, r24	; 0x02
    1b6a:	04 c0       	rjmp	.+8      	; 0x1b74 <malloc+0x96>
    1b6c:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__flp+0x1>
    1b70:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__flp>
    1b74:	fe 01       	movw	r30, r28
    1b76:	32 96       	adiw	r30, 0x02	; 2
    1b78:	44 c0       	rjmp	.+136    	; 0x1c02 <malloc+0x124>
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	e2 0f       	add	r30, r18
    1b7e:	f3 1f       	adc	r31, r19
    1b80:	81 93       	st	Z+, r24
    1b82:	91 93       	st	Z+, r25
    1b84:	22 50       	subi	r18, 0x02	; 2
    1b86:	31 09       	sbc	r19, r1
    1b88:	39 83       	std	Y+1, r19	; 0x01
    1b8a:	28 83       	st	Y, r18
    1b8c:	3a c0       	rjmp	.+116    	; 0x1c02 <malloc+0x124>
    1b8e:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1b92:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1b96:	23 2b       	or	r18, r19
    1b98:	41 f4       	brne	.+16     	; 0x1baa <malloc+0xcc>
    1b9a:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1b9e:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1ba2:	30 93 a5 01 	sts	0x01A5, r19	; 0x8001a5 <__brkval+0x1>
    1ba6:	20 93 a4 01 	sts	0x01A4, r18	; 0x8001a4 <__brkval>
    1baa:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1bae:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1bb2:	21 15       	cp	r18, r1
    1bb4:	31 05       	cpc	r19, r1
    1bb6:	41 f4       	brne	.+16     	; 0x1bc8 <malloc+0xea>
    1bb8:	2d b7       	in	r18, 0x3d	; 61
    1bba:	3e b7       	in	r19, 0x3e	; 62
    1bbc:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1bc0:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1bc4:	24 1b       	sub	r18, r20
    1bc6:	35 0b       	sbc	r19, r21
    1bc8:	e0 91 a4 01 	lds	r30, 0x01A4	; 0x8001a4 <__brkval>
    1bcc:	f0 91 a5 01 	lds	r31, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1bd0:	e2 17       	cp	r30, r18
    1bd2:	f3 07       	cpc	r31, r19
    1bd4:	a0 f4       	brcc	.+40     	; 0x1bfe <malloc+0x120>
    1bd6:	2e 1b       	sub	r18, r30
    1bd8:	3f 0b       	sbc	r19, r31
    1bda:	28 17       	cp	r18, r24
    1bdc:	39 07       	cpc	r19, r25
    1bde:	78 f0       	brcs	.+30     	; 0x1bfe <malloc+0x120>
    1be0:	ac 01       	movw	r20, r24
    1be2:	4e 5f       	subi	r20, 0xFE	; 254
    1be4:	5f 4f       	sbci	r21, 0xFF	; 255
    1be6:	24 17       	cp	r18, r20
    1be8:	35 07       	cpc	r19, r21
    1bea:	48 f0       	brcs	.+18     	; 0x1bfe <malloc+0x120>
    1bec:	4e 0f       	add	r20, r30
    1bee:	5f 1f       	adc	r21, r31
    1bf0:	50 93 a5 01 	sts	0x01A5, r21	; 0x8001a5 <__brkval+0x1>
    1bf4:	40 93 a4 01 	sts	0x01A4, r20	; 0x8001a4 <__brkval>
    1bf8:	81 93       	st	Z+, r24
    1bfa:	91 93       	st	Z+, r25
    1bfc:	02 c0       	rjmp	.+4      	; 0x1c02 <malloc+0x124>
    1bfe:	e0 e0       	ldi	r30, 0x00	; 0
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	cf 01       	movw	r24, r30
    1c04:	df 91       	pop	r29
    1c06:	cf 91       	pop	r28
    1c08:	1f 91       	pop	r17
    1c0a:	0f 91       	pop	r16
    1c0c:	08 95       	ret

00001c0e <free>:
    1c0e:	cf 93       	push	r28
    1c10:	df 93       	push	r29
    1c12:	00 97       	sbiw	r24, 0x00	; 0
    1c14:	09 f4       	brne	.+2      	; 0x1c18 <free+0xa>
    1c16:	81 c0       	rjmp	.+258    	; 0x1d1a <free+0x10c>
    1c18:	fc 01       	movw	r30, r24
    1c1a:	32 97       	sbiw	r30, 0x02	; 2
    1c1c:	13 82       	std	Z+3, r1	; 0x03
    1c1e:	12 82       	std	Z+2, r1	; 0x02
    1c20:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__flp>
    1c24:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__flp+0x1>
    1c28:	10 97       	sbiw	r26, 0x00	; 0
    1c2a:	81 f4       	brne	.+32     	; 0x1c4c <free+0x3e>
    1c2c:	20 81       	ld	r18, Z
    1c2e:	31 81       	ldd	r19, Z+1	; 0x01
    1c30:	82 0f       	add	r24, r18
    1c32:	93 1f       	adc	r25, r19
    1c34:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1c38:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1c3c:	28 17       	cp	r18, r24
    1c3e:	39 07       	cpc	r19, r25
    1c40:	51 f5       	brne	.+84     	; 0x1c96 <free+0x88>
    1c42:	f0 93 a5 01 	sts	0x01A5, r31	; 0x8001a5 <__brkval+0x1>
    1c46:	e0 93 a4 01 	sts	0x01A4, r30	; 0x8001a4 <__brkval>
    1c4a:	67 c0       	rjmp	.+206    	; 0x1d1a <free+0x10c>
    1c4c:	ed 01       	movw	r28, r26
    1c4e:	20 e0       	ldi	r18, 0x00	; 0
    1c50:	30 e0       	ldi	r19, 0x00	; 0
    1c52:	ce 17       	cp	r28, r30
    1c54:	df 07       	cpc	r29, r31
    1c56:	40 f4       	brcc	.+16     	; 0x1c68 <free+0x5a>
    1c58:	4a 81       	ldd	r20, Y+2	; 0x02
    1c5a:	5b 81       	ldd	r21, Y+3	; 0x03
    1c5c:	9e 01       	movw	r18, r28
    1c5e:	41 15       	cp	r20, r1
    1c60:	51 05       	cpc	r21, r1
    1c62:	f1 f0       	breq	.+60     	; 0x1ca0 <free+0x92>
    1c64:	ea 01       	movw	r28, r20
    1c66:	f5 cf       	rjmp	.-22     	; 0x1c52 <free+0x44>
    1c68:	d3 83       	std	Z+3, r29	; 0x03
    1c6a:	c2 83       	std	Z+2, r28	; 0x02
    1c6c:	40 81       	ld	r20, Z
    1c6e:	51 81       	ldd	r21, Z+1	; 0x01
    1c70:	84 0f       	add	r24, r20
    1c72:	95 1f       	adc	r25, r21
    1c74:	c8 17       	cp	r28, r24
    1c76:	d9 07       	cpc	r29, r25
    1c78:	59 f4       	brne	.+22     	; 0x1c90 <free+0x82>
    1c7a:	88 81       	ld	r24, Y
    1c7c:	99 81       	ldd	r25, Y+1	; 0x01
    1c7e:	84 0f       	add	r24, r20
    1c80:	95 1f       	adc	r25, r21
    1c82:	02 96       	adiw	r24, 0x02	; 2
    1c84:	91 83       	std	Z+1, r25	; 0x01
    1c86:	80 83       	st	Z, r24
    1c88:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8c:	93 83       	std	Z+3, r25	; 0x03
    1c8e:	82 83       	std	Z+2, r24	; 0x02
    1c90:	21 15       	cp	r18, r1
    1c92:	31 05       	cpc	r19, r1
    1c94:	29 f4       	brne	.+10     	; 0x1ca0 <free+0x92>
    1c96:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__flp+0x1>
    1c9a:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__flp>
    1c9e:	3d c0       	rjmp	.+122    	; 0x1d1a <free+0x10c>
    1ca0:	e9 01       	movw	r28, r18
    1ca2:	fb 83       	std	Y+3, r31	; 0x03
    1ca4:	ea 83       	std	Y+2, r30	; 0x02
    1ca6:	49 91       	ld	r20, Y+
    1ca8:	59 91       	ld	r21, Y+
    1caa:	c4 0f       	add	r28, r20
    1cac:	d5 1f       	adc	r29, r21
    1cae:	ec 17       	cp	r30, r28
    1cb0:	fd 07       	cpc	r31, r29
    1cb2:	61 f4       	brne	.+24     	; 0x1ccc <free+0xbe>
    1cb4:	80 81       	ld	r24, Z
    1cb6:	91 81       	ldd	r25, Z+1	; 0x01
    1cb8:	84 0f       	add	r24, r20
    1cba:	95 1f       	adc	r25, r21
    1cbc:	02 96       	adiw	r24, 0x02	; 2
    1cbe:	e9 01       	movw	r28, r18
    1cc0:	99 83       	std	Y+1, r25	; 0x01
    1cc2:	88 83       	st	Y, r24
    1cc4:	82 81       	ldd	r24, Z+2	; 0x02
    1cc6:	93 81       	ldd	r25, Z+3	; 0x03
    1cc8:	9b 83       	std	Y+3, r25	; 0x03
    1cca:	8a 83       	std	Y+2, r24	; 0x02
    1ccc:	e0 e0       	ldi	r30, 0x00	; 0
    1cce:	f0 e0       	ldi	r31, 0x00	; 0
    1cd0:	12 96       	adiw	r26, 0x02	; 2
    1cd2:	8d 91       	ld	r24, X+
    1cd4:	9c 91       	ld	r25, X
    1cd6:	13 97       	sbiw	r26, 0x03	; 3
    1cd8:	00 97       	sbiw	r24, 0x00	; 0
    1cda:	19 f0       	breq	.+6      	; 0x1ce2 <free+0xd4>
    1cdc:	fd 01       	movw	r30, r26
    1cde:	dc 01       	movw	r26, r24
    1ce0:	f7 cf       	rjmp	.-18     	; 0x1cd0 <free+0xc2>
    1ce2:	8d 91       	ld	r24, X+
    1ce4:	9c 91       	ld	r25, X
    1ce6:	11 97       	sbiw	r26, 0x01	; 1
    1ce8:	9d 01       	movw	r18, r26
    1cea:	2e 5f       	subi	r18, 0xFE	; 254
    1cec:	3f 4f       	sbci	r19, 0xFF	; 255
    1cee:	82 0f       	add	r24, r18
    1cf0:	93 1f       	adc	r25, r19
    1cf2:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1cf6:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1cfa:	28 17       	cp	r18, r24
    1cfc:	39 07       	cpc	r19, r25
    1cfe:	69 f4       	brne	.+26     	; 0x1d1a <free+0x10c>
    1d00:	30 97       	sbiw	r30, 0x00	; 0
    1d02:	29 f4       	brne	.+10     	; 0x1d0e <free+0x100>
    1d04:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp+0x1>
    1d08:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <__flp>
    1d0c:	02 c0       	rjmp	.+4      	; 0x1d12 <free+0x104>
    1d0e:	13 82       	std	Z+3, r1	; 0x03
    1d10:	12 82       	std	Z+2, r1	; 0x02
    1d12:	b0 93 a5 01 	sts	0x01A5, r27	; 0x8001a5 <__brkval+0x1>
    1d16:	a0 93 a4 01 	sts	0x01A4, r26	; 0x8001a4 <__brkval>
    1d1a:	df 91       	pop	r29
    1d1c:	cf 91       	pop	r28
    1d1e:	08 95       	ret

00001d20 <__do_global_dtors>:
    1d20:	10 e0       	ldi	r17, 0x00	; 0
    1d22:	c4 e4       	ldi	r28, 0x44	; 68
    1d24:	d0 e0       	ldi	r29, 0x00	; 0
    1d26:	04 c0       	rjmp	.+8      	; 0x1d30 <__do_global_dtors+0x10>
    1d28:	fe 01       	movw	r30, r28
    1d2a:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__tablejump2__>
    1d2e:	21 96       	adiw	r28, 0x01	; 1
    1d30:	c5 34       	cpi	r28, 0x45	; 69
    1d32:	d1 07       	cpc	r29, r17
    1d34:	c9 f7       	brne	.-14     	; 0x1d28 <__do_global_dtors+0x8>
    1d36:	f8 94       	cli

00001d38 <__stop_program>:
    1d38:	ff cf       	rjmp	.-2      	; 0x1d38 <__stop_program>
